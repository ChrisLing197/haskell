{-

Name: Christian Ling
Time spent on assignment: 70 hours if not more
Collaborators/Acknowledgements:

-}

{-# OPTIONS -Wall -Wno-unused-imports #-}

module CardGames where

import Data.Either
import Data.List
import Data.Maybe

{- ************************************************************ -}
{- ************************************************************ -}

{- Cards -}

data Rank = Ace | Two | Three | Four | Five | Six | Seven
          | Eight | Nine | Ten | Jack | Queen | King
  deriving (Read, Show, Eq, Enum, Bounded)

data Suit = Clubs | Diamonds | Hearts | Spades
  deriving (Read, Show, Eq, Enum, Bounded)

data Card = Rank :@: Suit
  deriving (Read, Show, Eq)

rank :: Card -> Rank
rank (r :@: _) = r
suit :: Card -> Suit
suit (_ :@: s) = s

{- ************************************************************ -}

deck :: [Card]

deck =
  [(r :@: s) |
    s<-[Clubs, Hearts, Spades, Diamonds],
    r<-[Ace,Two,Three,Four,Five,Six,Seven,Eight,Nine,Ten,Jack,Queen,King] ]

{- ************************************************************ -}
{- ************************************************************ -}

{- Poker -}

{- ************************************************************ -}

isRoyalFlush :: (Card,Card,Card,Card,Card)->Bool
isRoyalFlush (c1,c2,c3,c4,c5)=
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5) &&(suit c1)==(suit c2)&&(suit c1)==(suit c3)&&(suit c1)==(suit c4)&&(suit c1)==(suit c5)&&
  (or (map (((rank c1),(rank c2),(rank c3),(rank c4),(rank c5)) == ) [(Ace, King, Queen, Jack, Ten),(Ace, King, Queen, Ten, Jack),(Ace, King, Jack, Queen, Ten),(Ace, King, Jack, Ten, Queen),(Ace, King, Ten, Queen, Jack),(Ace, King, Ten, Jack, Queen),(Ace, Queen, King, Jack, Ten),(Ace, Queen, King, Ten, Jack),(Ace, Queen, Jack, King, Ten),(Ace, Queen, Jack, Ten, King),(Ace, Queen, Ten, King, Jack),(Ace, Queen, Ten, Jack, King),(Ace, Jack, King, Queen, Ten),(Ace, Jack, King, Ten, Queen),(Ace, Jack, Queen, King, Ten),(Ace, Jack, Queen, Ten, King),(Ace, Jack, Ten, King, Queen),(Ace, Jack, Ten, Queen, King),(Ace, Ten, King, Queen, Jack),(Ace, Ten, King, Jack, Queen),(Ace, Ten, Queen, King, Jack),(Ace, Ten, Queen, Jack, King),(Ace, Ten, Jack, King, Queen),(Ace, Ten, Jack, Queen, King),(King, Ace, Queen, Jack, Ten),(King, Ace, Queen, Ten, Jack),(King, Ace, Jack, Queen, Ten),(King, Ace, Jack, Ten, Queen),(King, Ace, Ten, Queen, Jack),(King, Ace, Ten, Jack, Queen),(King, Queen, Ace, Jack, Ten),(King, Queen, Ace, Ten, Jack),(King, Queen, Jack, Ace, Ten),(King, Queen, Jack, Ten, Ace),(King, Queen, Ten, Ace, Jack),(King, Queen, Ten, Jack, Ace),(King, Jack, Ace, Queen, Ten),(King, Jack, Ace, Ten, Queen),(King, Jack, Queen, Ace, Ten),(King, Jack, Queen, Ten, Ace),(King, Jack, Ten, Ace, Queen),(King, Jack, Ten, Queen, Ace),(King, Ten, Ace, Queen, Jack),(King, Ten, Ace, Jack, Queen),(King, Ten, Queen, Ace, Jack),(King, Ten, Queen, Jack, Ace),(King, Ten, Jack, Ace, Queen),(King, Ten, Jack, Queen, Ace),(Queen, Ace, King, Jack, Ten),(Queen, Ace, King, Ten, Jack),(Queen, Ace, Jack, King, Ten),(Queen, Ace, Jack, Ten, King),(Queen, Ace, Ten, King, Jack),(Queen, Ace, Ten, Jack, King),(Queen, King, Ace, Jack, Ten),(Queen, King, Ace, Ten, Jack),(Queen, King, Jack, Ace, Ten),(Queen, King, Jack, Ten, Ace),(Queen, King, Ten, Ace, Jack),(Queen, King, Ten, Jack, Ace),(Queen, Jack, Ace, King, Ten),(Queen, Jack, Ace, Ten, King),(Queen, Jack, King, Ace, Ten),(Queen, Jack, King, Ten, Ace),(Queen, Jack, Ten, Ace, King),(Queen, Jack, Ten, King, Ace),(Queen, Ten, Ace, King, Jack),(Queen, Ten, Ace, Jack, King),(Queen, Ten, King, Ace, Jack),(Queen, Ten, King, Jack, Ace),(Queen, Ten, Jack, Ace, King),(Queen, Ten, Jack, King, Ace),(Jack, Ace, King, Queen, Ten),(Jack, Ace, King, Ten, Queen),(Jack, Ace, Queen, King, Ten),(Jack, Ace, Queen, Ten, King),(Jack, Ace, Ten, King, Queen),(Jack, Ace, Ten, Queen, King),(Jack, King, Ace, Queen, Ten),(Jack, King, Ace, Ten, Queen),(Jack, King, Queen, Ace, Ten),(Jack, King, Queen, Ten, Ace),(Jack, King, Ten, Ace, Queen),(Jack, King, Ten, Queen, Ace),(Jack, Queen, Ace, King, Ten),(Jack, Queen, Ace, Ten, King),(Jack, Queen, King, Ace, Ten),(Jack, Queen, King, Ten, Ace),(Jack, Queen, Ten, Ace, King),(Jack, Queen, Ten, King, Ace),(Jack, Ten, Ace, King, Queen),(Jack, Ten, Ace, Queen, King),(Jack, Ten, King, Ace, Queen),(Jack, Ten, King, Queen, Ace),(Jack, Ten, Queen, Ace, King),(Jack, Ten, Queen, King, Ace),(Ten, Ace, King, Queen, Jack),(Ten, Ace, King, Jack, Queen),(Ten, Ace, Queen, King, Jack),(Ten, Ace, Queen, Jack, King),(Ten, Ace, Jack, King, Queen),(Ten, Ace, Jack, Queen, King),(Ten, King, Ace, Queen, Jack),(Ten, King, Ace, Jack, Queen),(Ten, King, Queen, Ace, Jack),(Ten, King, Queen, Jack, Ace),(Ten, King, Jack, Ace, Queen),(Ten, King, Jack, Queen, Ace),(Ten, Queen, Ace, King, Jack),(Ten, Queen, Ace, Jack, King),(Ten, Queen, King, Ace, Jack),(Ten, Queen, King, Jack, Ace),(Ten, Queen, Jack, Ace, King),(Ten, Queen, Jack, King, Ace),(Ten, Jack, Ace, King, Queen),(Ten, Jack, Ace, Queen, King),(Ten, Jack, King, Ace, Queen),(Ten, Jack, King, Queen, Ace),(Ten, Jack, Queen, Ace, King),(Ten, Jack, Queen, King, Ace)] ))



isStraightFlush :: (Card,Card,Card,Card,Card)->Bool
isStraightFlush (c1,c2,c3,c4,c5)=
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5) &&(suit c1)==(suit c2)&&(suit c1)==(suit c3)&&(suit c1)==(suit c4)&&(suit c1)==(suit c5)&&
  (or (map (((rank c1),(rank c2),(rank c3),(rank c4),(rank c5)) == ) [(Ace, King, Queen, Jack, Ten),(Ace, King, Queen, Ten, Jack),(Ace, King, Jack, Queen, Ten),(Ace, King, Jack, Ten, Queen),(Ace, King, Ten, Queen, Jack),(Ace, King, Ten, Jack, Queen),(Ace, Queen, King, Jack, Ten),(Ace, Queen, King, Ten, Jack),(Ace, Queen, Jack, King, Ten),(Ace, Queen, Jack, Ten, King),(Ace, Queen, Ten, King, Jack),(Ace, Queen, Ten, Jack, King),(Ace, Jack, King, Queen, Ten),(Ace, Jack, King, Ten, Queen),(Ace, Jack, Queen, King, Ten),(Ace, Jack, Queen, Ten, King),(Ace, Jack, Ten, King, Queen),(Ace, Jack, Ten, Queen, King),(Ace, Ten, King, Queen, Jack),(Ace, Ten, King, Jack, Queen),(Ace, Ten, Queen, King, Jack),(Ace, Ten, Queen, Jack, King),(Ace, Ten, Jack, King, Queen),(Ace, Ten, Jack, Queen, King),(King, Ace, Queen, Jack, Ten),(King, Ace, Queen, Ten, Jack),(King, Ace, Jack, Queen, Ten),(King, Ace, Jack, Ten, Queen),(King, Ace, Ten, Queen, Jack),(King, Ace, Ten, Jack, Queen),(King, Queen, Ace, Jack, Ten),(King, Queen, Ace, Ten, Jack),(King, Queen, Jack, Ace, Ten),(King, Queen, Jack, Ten, Ace),(King, Queen, Ten, Ace, Jack),(King, Queen, Ten, Jack, Ace),(King, Jack, Ace, Queen, Ten),(King, Jack, Ace, Ten, Queen),(King, Jack, Queen, Ace, Ten),(King, Jack, Queen, Ten, Ace),(King, Jack, Ten, Ace, Queen),(King, Jack, Ten, Queen, Ace),(King, Ten, Ace, Queen, Jack),(King, Ten, Ace, Jack, Queen),(King, Ten, Queen, Ace, Jack),(King, Ten, Queen, Jack, Ace),(King, Ten, Jack, Ace, Queen),(King, Ten, Jack, Queen, Ace),(Queen, Ace, King, Jack, Ten),(Queen, Ace, King, Ten, Jack),(Queen, Ace, Jack, King, Ten),(Queen, Ace, Jack, Ten, King),(Queen, Ace, Ten, King, Jack),(Queen, Ace, Ten, Jack, King),(Queen, King, Ace, Jack, Ten),(Queen, King, Ace, Ten, Jack),(Queen, King, Jack, Ace, Ten),(Queen, King, Jack, Ten, Ace),(Queen, King, Ten, Ace, Jack),(Queen, King, Ten, Jack, Ace),(Queen, Jack, Ace, King, Ten),(Queen, Jack, Ace, Ten, King),(Queen, Jack, King, Ace, Ten),(Queen, Jack, King, Ten, Ace),(Queen, Jack, Ten, Ace, King),(Queen, Jack, Ten, King, Ace),(Queen, Ten, Ace, King, Jack),(Queen, Ten, Ace, Jack, King),(Queen, Ten, King, Ace, Jack),(Queen, Ten, King, Jack, Ace),(Queen, Ten, Jack, Ace, King),(Queen, Ten, Jack, King, Ace),(Jack, Ace, King, Queen, Ten),(Jack, Ace, King, Ten, Queen),(Jack, Ace, Queen, King, Ten),(Jack, Ace, Queen, Ten, King),(Jack, Ace, Ten, King, Queen),(Jack, Ace, Ten, Queen, King),(Jack, King, Ace, Queen, Ten),(Jack, King, Ace, Ten, Queen),(Jack, King, Queen, Ace, Ten),(Jack, King, Queen, Ten, Ace),(Jack, King, Ten, Ace, Queen),(Jack, King, Ten, Queen, Ace),(Jack, Queen, Ace, King, Ten),(Jack, Queen, Ace, Ten, King),(Jack, Queen, King, Ace, Ten),(Jack, Queen, King, Ten, Ace),(Jack, Queen, Ten, Ace, King),(Jack, Queen, Ten, King, Ace),(Jack, Ten, Ace, King, Queen),(Jack, Ten, Ace, Queen, King),(Jack, Ten, King, Ace, Queen),(Jack, Ten, King, Queen, Ace),(Jack, Ten, Queen, Ace, King),(Jack, Ten, Queen, King, Ace),(Ten, Ace, King, Queen, Jack),(Ten, Ace, King, Jack, Queen),(Ten, Ace, Queen, King, Jack),(Ten, Ace, Queen, Jack, King),(Ten, Ace, Jack, King, Queen),(Ten, Ace, Jack, Queen, King),(Ten, King, Ace, Queen, Jack),(Ten, King, Ace, Jack, Queen),(Ten, King, Queen, Ace, Jack),(Ten, King, Queen, Jack, Ace),(Ten, King, Jack, Ace, Queen),(Ten, King, Jack, Queen, Ace),(Ten, Queen, Ace, King, Jack),(Ten, Queen, Ace, Jack, King),(Ten, Queen, King, Ace, Jack),(Ten, Queen, King, Jack, Ace),(Ten, Queen, Jack, Ace, King),(Ten, Queen, Jack, King, Ace),(Ten, Jack, Ace, King, Queen),(Ten, Jack, Ace, Queen, King),(Ten, Jack, King, Ace, Queen),(Ten, Jack, King, Queen, Ace),(Ten, Jack, Queen, Ace, King),(Ten, Jack, Queen, King, Ace),(King, Queen, Jack, Ten, Nine),(King, Queen, Jack, Nine, Ten),(King, Queen, Ten, Jack, Nine),(King, Queen, Ten, Nine, Jack),(King, Queen, Nine, Jack, Ten),(King, Queen, Nine, Ten, Jack),(King, Jack, Queen, Ten, Nine),(King, Jack, Queen, Nine, Ten),(King, Jack, Ten, Queen, Nine),(King, Jack, Ten, Nine, Queen),(King, Jack, Nine, Queen, Ten),(King, Jack, Nine, Ten, Queen),(King, Ten, Queen, Jack, Nine),(King, Ten, Queen, Nine, Jack),(King, Ten, Jack, Queen, Nine),(King, Ten, Jack, Nine, Queen),(King, Ten, Nine, Queen, Jack),(King, Ten, Nine, Jack, Queen),(King, Nine, Queen, Jack, Ten),(King, Nine, Queen, Ten, Jack),(King, Nine, Jack, Queen, Ten),(King, Nine, Jack, Ten, Queen),(King, Nine, Ten, Queen, Jack),(King, Nine, Ten, Jack, Queen),(Queen, King, Jack, Ten, Nine),(Queen, King, Jack, Nine, Ten),(Queen, King, Ten, Jack, Nine),(Queen, King, Ten, Nine, Jack),(Queen, King, Nine, Jack, Ten),(Queen, King, Nine, Ten, Jack),(Queen, Jack, King, Ten, Nine),(Queen, Jack, King, Nine, Ten),(Queen, Jack, Ten, King, Nine),(Queen, Jack, Ten, Nine, King),(Queen, Jack, Nine, King, Ten),(Queen, Jack, Nine, Ten, King),(Queen, Ten, King, Jack, Nine),(Queen, Ten, King, Nine, Jack),(Queen, Ten, Jack, King, Nine),(Queen, Ten, Jack, Nine, King),(Queen, Ten, Nine, King, Jack),(Queen, Ten, Nine, Jack, King),(Queen, Nine, King, Jack, Ten),(Queen, Nine, King, Ten, Jack),(Queen, Nine, Jack, King, Ten),(Queen, Nine, Jack, Ten, King),(Queen, Nine, Ten, King, Jack),(Queen, Nine, Ten, Jack, King),(Jack, King, Queen, Ten, Nine),(Jack, King, Queen, Nine, Ten),(Jack, King, Ten, Queen, Nine),(Jack, King, Ten, Nine, Queen),(Jack, King, Nine, Queen, Ten),(Jack, King, Nine, Ten, Queen),(Jack, Queen, King, Ten, Nine),(Jack, Queen, King, Nine, Ten),(Jack, Queen, Ten, King, Nine),(Jack, Queen, Ten, Nine, King),(Jack, Queen, Nine, King, Ten),(Jack, Queen, Nine, Ten, King),(Jack, Ten, King, Queen, Nine),(Jack, Ten, King, Nine, Queen),(Jack, Ten, Queen, King, Nine),(Jack, Ten, Queen, Nine, King),(Jack, Ten, Nine, King, Queen),(Jack, Ten, Nine, Queen, King),(Jack, Nine, King, Queen, Ten),(Jack, Nine, King, Ten, Queen),(Jack, Nine, Queen, King, Ten),(Jack, Nine, Queen, Ten, King),(Jack, Nine, Ten, King, Queen),(Jack, Nine, Ten, Queen, King),(Ten, King, Queen, Jack, Nine),(Ten, King, Queen, Nine, Jack),(Ten, King, Jack, Queen, Nine),(Ten, King, Jack, Nine, Queen),(Ten, King, Nine, Queen, Jack),(Ten, King, Nine, Jack, Queen),(Ten, Queen, King, Jack, Nine),(Ten, Queen, King, Nine, Jack),(Ten, Queen, Jack, King, Nine),(Ten, Queen, Jack, Nine, King),(Ten, Queen, Nine, King, Jack),(Ten, Queen, Nine, Jack, King),(Ten, Jack, King, Queen, Nine),(Ten, Jack, King, Nine, Queen),(Ten, Jack, Queen, King, Nine),(Ten, Jack, Queen, Nine, King),(Ten, Jack, Nine, King, Queen),(Ten, Jack, Nine, Queen, King),(Ten, Nine, King, Queen, Jack),(Ten, Nine, King, Jack, Queen),(Ten, Nine, Queen, King, Jack),(Ten, Nine, Queen, Jack, King),(Ten, Nine, Jack, King, Queen),(Ten, Nine, Jack, Queen, King),(Nine, King, Queen, Jack, Ten),(Nine, King, Queen, Ten, Jack),(Nine, King, Jack, Queen, Ten),(Nine, King, Jack, Ten, Queen),(Nine, King, Ten, Queen, Jack),(Nine, King, Ten, Jack, Queen),(Nine, Queen, King, Jack, Ten),(Nine, Queen, King, Ten, Jack),(Nine, Queen, Jack, King, Ten),(Nine, Queen, Jack, Ten, King),(Nine, Queen, Ten, King, Jack),(Nine, Queen, Ten, Jack, King),(Nine, Jack, King, Queen, Ten),(Nine, Jack, King, Ten, Queen),(Nine, Jack, Queen, King, Ten),(Nine, Jack, Queen, Ten, King),(Nine, Jack, Ten, King, Queen),(Nine, Jack, Ten, Queen, King),(Nine, Ten, King, Queen, Jack),(Nine, Ten, King, Jack, Queen),(Nine, Ten, Queen, King, Jack),(Nine, Ten, Queen, Jack, King),(Nine, Ten, Jack, King, Queen),(Nine, Ten, Jack, Queen, King),(Queen, Jack, Ten, Nine, Eight),(Queen, Jack, Ten, Eight, Nine),(Queen, Jack, Nine, Ten, Eight),(Queen, Jack, Nine, Eight, Ten),(Queen, Jack, Eight, Ten, Nine),(Queen, Jack, Eight, Nine, Ten),(Queen, Ten, Jack, Nine, Eight),(Queen, Ten, Jack, Eight, Nine),(Queen, Ten, Nine, Jack, Eight),(Queen, Ten, Nine, Eight, Jack),(Queen, Ten, Eight, Jack, Nine),(Queen, Ten, Eight, Nine, Jack),(Queen, Nine, Jack, Ten, Eight),(Queen, Nine, Jack, Eight, Ten),(Queen, Nine, Ten, Jack, Eight),(Queen, Nine, Ten, Eight, Jack),(Queen, Nine, Eight, Jack, Ten),(Queen, Nine, Eight, Ten, Jack),(Queen, Eight, Jack, Ten, Nine),(Queen, Eight, Jack, Nine, Ten),(Queen, Eight, Ten, Jack, Nine),(Queen, Eight, Ten, Nine, Jack),(Queen, Eight, Nine, Jack, Ten),(Queen, Eight, Nine, Ten, Jack),(Jack, Queen, Ten, Nine, Eight),(Jack, Queen, Ten, Eight, Nine),(Jack, Queen, Nine, Ten, Eight),(Jack, Queen, Nine, Eight, Ten),(Jack, Queen, Eight, Ten, Nine),(Jack, Queen, Eight, Nine, Ten),(Jack, Ten, Queen, Nine, Eight),(Jack, Ten, Queen, Eight, Nine),(Jack, Ten, Nine, Queen, Eight),(Jack, Ten, Nine, Eight, Queen),(Jack, Ten, Eight, Queen, Nine),(Jack, Ten, Eight, Nine, Queen),(Jack, Nine, Queen, Ten, Eight),(Jack, Nine, Queen, Eight, Ten),(Jack, Nine, Ten, Queen, Eight),(Jack, Nine, Ten, Eight, Queen),(Jack, Nine, Eight, Queen, Ten),(Jack, Nine, Eight, Ten, Queen),(Jack, Eight, Queen, Ten, Nine),(Jack, Eight, Queen, Nine, Ten),(Jack, Eight, Ten, Queen, Nine),(Jack, Eight, Ten, Nine, Queen),(Jack, Eight, Nine, Queen, Ten),(Jack, Eight, Nine, Ten, Queen),(Ten, Queen, Jack, Nine, Eight),(Ten, Queen, Jack, Eight, Nine),(Ten, Queen, Nine, Jack, Eight),(Ten, Queen, Nine, Eight, Jack),(Ten, Queen, Eight, Jack, Nine),(Ten, Queen, Eight, Nine, Jack),(Ten, Jack, Queen, Nine, Eight),(Ten, Jack, Queen, Eight, Nine),(Ten, Jack, Nine, Queen, Eight),(Ten, Jack, Nine, Eight, Queen),(Ten, Jack, Eight, Queen, Nine),(Ten, Jack, Eight, Nine, Queen),(Ten, Nine, Queen, Jack, Eight),(Ten, Nine, Queen, Eight, Jack),(Ten, Nine, Jack, Queen, Eight),(Ten, Nine, Jack, Eight, Queen),(Ten, Nine, Eight, Queen, Jack),(Ten, Nine, Eight, Jack, Queen),(Ten, Eight, Queen, Jack, Nine),(Ten, Eight, Queen, Nine, Jack),(Ten, Eight, Jack, Queen, Nine),(Ten, Eight, Jack, Nine, Queen),(Ten, Eight, Nine, Queen, Jack),(Ten, Eight, Nine, Jack, Queen),(Nine, Queen, Jack, Ten, Eight),(Nine, Queen, Jack, Eight, Ten),(Nine, Queen, Ten, Jack, Eight),(Nine, Queen, Ten, Eight, Jack),(Nine, Queen, Eight, Jack, Ten),(Nine, Queen, Eight, Ten, Jack),(Nine, Jack, Queen, Ten, Eight),(Nine, Jack, Queen, Eight, Ten),(Nine, Jack, Ten, Queen, Eight),(Nine, Jack, Ten, Eight, Queen),(Nine, Jack, Eight, Queen, Ten),(Nine, Jack, Eight, Ten, Queen),(Nine, Ten, Queen, Jack, Eight),(Nine, Ten, Queen, Eight, Jack),(Nine, Ten, Jack, Queen, Eight),(Nine, Ten, Jack, Eight, Queen),(Nine, Ten, Eight, Queen, Jack),(Nine, Ten, Eight, Jack, Queen),(Nine, Eight, Queen, Jack, Ten),(Nine, Eight, Queen, Ten, Jack),(Nine, Eight, Jack, Queen, Ten),(Nine, Eight, Jack, Ten, Queen),(Nine, Eight, Ten, Queen, Jack),(Nine, Eight, Ten, Jack, Queen),(Eight, Queen, Jack, Ten, Nine),(Eight, Queen, Jack, Nine, Ten),(Eight, Queen, Ten, Jack, Nine),(Eight, Queen, Ten, Nine, Jack),(Eight, Queen, Nine, Jack, Ten),(Eight, Queen, Nine, Ten, Jack),(Eight, Jack, Queen, Ten, Nine),(Eight, Jack, Queen, Nine, Ten),(Eight, Jack, Ten, Queen, Nine),(Eight, Jack, Ten, Nine, Queen),(Eight, Jack, Nine, Queen, Ten),(Eight, Jack, Nine, Ten, Queen),(Eight, Ten, Queen, Jack, Nine),(Eight, Ten, Queen, Nine, Jack),(Eight, Ten, Jack, Queen, Nine),(Eight, Ten, Jack, Nine, Queen),(Eight, Ten, Nine, Queen, Jack),(Eight, Ten, Nine, Jack, Queen),(Eight, Nine, Queen, Jack, Ten),(Eight, Nine, Queen, Ten, Jack),(Eight, Nine, Jack, Queen, Ten),(Eight, Nine, Jack, Ten, Queen),(Eight, Nine, Ten, Queen, Jack),(Eight, Nine, Ten, Jack, Queen),(Jack, Ten, Nine, Eight, Seven),(Jack, Ten, Nine, Seven, Eight),(Jack, Ten, Eight, Nine, Seven),(Jack, Ten, Eight, Seven, Nine),(Jack, Ten, Seven, Nine, Eight),(Jack, Ten, Seven, Eight, Nine),(Jack, Nine, Ten, Eight, Seven),(Jack, Nine, Ten, Seven, Eight),(Jack, Nine, Eight, Ten, Seven),(Jack, Nine, Eight, Seven, Ten),(Jack, Nine, Seven, Ten, Eight),(Jack, Nine, Seven, Eight, Ten),(Jack, Eight, Ten, Nine, Seven),(Jack, Eight, Ten, Seven, Nine),(Jack, Eight, Nine, Ten, Seven),(Jack, Eight, Nine, Seven, Ten),(Jack, Eight, Seven, Ten, Nine),(Jack, Eight, Seven, Nine, Ten),(Jack, Seven, Ten, Nine, Eight),(Jack, Seven, Ten, Eight, Nine),(Jack, Seven, Nine, Ten, Eight),(Jack, Seven, Nine, Eight, Ten),(Jack, Seven, Eight, Ten, Nine),(Jack, Seven, Eight, Nine, Ten),(Ten, Jack, Nine, Eight, Seven),(Ten, Jack, Nine, Seven, Eight),(Ten, Jack, Eight, Nine, Seven),(Ten, Jack, Eight, Seven, Nine),(Ten, Jack, Seven, Nine, Eight),(Ten, Jack, Seven, Eight, Nine),(Ten, Nine, Jack, Eight, Seven),(Ten, Nine, Jack, Seven, Eight),(Ten, Nine, Eight, Jack, Seven),(Ten, Nine, Eight, Seven, Jack),(Ten, Nine, Seven, Jack, Eight),(Ten, Nine, Seven, Eight, Jack),(Ten, Eight, Jack, Nine, Seven),(Ten, Eight, Jack, Seven, Nine),(Ten, Eight, Nine, Jack, Seven),(Ten, Eight, Nine, Seven, Jack),(Ten, Eight, Seven, Jack, Nine),(Ten, Eight, Seven, Nine, Jack),(Ten, Seven, Jack, Nine, Eight),(Ten, Seven, Jack, Eight, Nine),(Ten, Seven, Nine, Jack, Eight),(Ten, Seven, Nine, Eight, Jack),(Ten, Seven, Eight, Jack, Nine),(Ten, Seven, Eight, Nine, Jack),(Nine, Jack, Ten, Eight, Seven),(Nine, Jack, Ten, Seven, Eight),(Nine, Jack, Eight, Ten, Seven),(Nine, Jack, Eight, Seven, Ten),(Nine, Jack, Seven, Ten, Eight),(Nine, Jack, Seven, Eight, Ten),(Nine, Ten, Jack, Eight, Seven),(Nine, Ten, Jack, Seven, Eight),(Nine, Ten, Eight, Jack, Seven),(Nine, Ten, Eight, Seven, Jack),(Nine, Ten, Seven, Jack, Eight),(Nine, Ten, Seven, Eight, Jack),(Nine, Eight, Jack, Ten, Seven),(Nine, Eight, Jack, Seven, Ten),(Nine, Eight, Ten, Jack, Seven),(Nine, Eight, Ten, Seven, Jack),(Nine, Eight, Seven, Jack, Ten),(Nine, Eight, Seven, Ten, Jack),(Nine, Seven, Jack, Ten, Eight),(Nine, Seven, Jack, Eight, Ten),(Nine, Seven, Ten, Jack, Eight),(Nine, Seven, Ten, Eight, Jack),(Nine, Seven, Eight, Jack, Ten),(Nine, Seven, Eight, Ten, Jack),(Eight, Jack, Ten, Nine, Seven),(Eight, Jack, Ten, Seven, Nine),(Eight, Jack, Nine, Ten, Seven),(Eight, Jack, Nine, Seven, Ten),(Eight, Jack, Seven, Ten, Nine),(Eight, Jack, Seven, Nine, Ten),(Eight, Ten, Jack, Nine, Seven),(Eight, Ten, Jack, Seven, Nine),(Eight, Ten, Nine, Jack, Seven),(Eight, Ten, Nine, Seven, Jack),(Eight, Ten, Seven, Jack, Nine),(Eight, Ten, Seven, Nine, Jack),(Eight, Nine, Jack, Ten, Seven),(Eight, Nine, Jack, Seven, Ten),(Eight, Nine, Ten, Jack, Seven),(Eight, Nine, Ten, Seven, Jack),(Eight, Nine, Seven, Jack, Ten),(Eight, Nine, Seven, Ten, Jack),(Eight, Seven, Jack, Ten, Nine),(Eight, Seven, Jack, Nine, Ten),(Eight, Seven, Ten, Jack, Nine),(Eight, Seven, Ten, Nine, Jack),(Eight, Seven, Nine, Jack, Ten),(Eight, Seven, Nine, Ten, Jack),(Seven, Jack, Ten, Nine, Eight),(Seven, Jack, Ten, Eight, Nine),(Seven, Jack, Nine, Ten, Eight),(Seven, Jack, Nine, Eight, Ten),(Seven, Jack, Eight, Ten, Nine),(Seven, Jack, Eight, Nine, Ten),(Seven, Ten, Jack, Nine, Eight),(Seven, Ten, Jack, Eight, Nine),(Seven, Ten, Nine, Jack, Eight),(Seven, Ten, Nine, Eight, Jack),(Seven, Ten, Eight, Jack, Nine),(Seven, Ten, Eight, Nine, Jack),(Seven, Nine, Jack, Ten, Eight),(Seven, Nine, Jack, Eight, Ten),(Seven, Nine, Ten, Jack, Eight),(Seven, Nine, Ten, Eight, Jack),(Seven, Nine, Eight, Jack, Ten),(Seven, Nine, Eight, Ten, Jack),(Seven, Eight, Jack, Ten, Nine),(Seven, Eight, Jack, Nine, Ten),(Seven, Eight, Ten, Jack, Nine),(Seven, Eight, Ten, Nine, Jack),(Seven, Eight, Nine, Jack, Ten),(Seven, Eight, Nine, Ten, Jack),(Ten, Nine, Eight, Seven, Six),(Ten, Nine, Eight, Six, Seven),(Ten, Nine, Seven, Eight, Six),(Ten, Nine, Seven, Six, Eight),(Ten, Nine, Six, Eight, Seven),(Ten, Nine, Six, Seven, Eight),(Ten, Eight, Nine, Seven, Six),(Ten, Eight, Nine, Six, Seven),(Ten, Eight, Seven, Nine, Six),(Ten, Eight, Seven, Six, Nine),(Ten, Eight, Six, Nine, Seven),(Ten, Eight, Six, Seven, Nine),(Ten, Seven, Nine, Eight, Six),(Ten, Seven, Nine, Six, Eight),(Ten, Seven, Eight, Nine, Six),(Ten, Seven, Eight, Six, Nine),(Ten, Seven, Six, Nine, Eight),(Ten, Seven, Six, Eight, Nine),(Ten, Six, Nine, Eight, Seven),(Ten, Six, Nine, Seven, Eight),(Ten, Six, Eight, Nine, Seven),(Ten, Six, Eight, Seven, Nine),(Ten, Six, Seven, Nine, Eight),(Ten, Six, Seven, Eight, Nine),(Nine, Ten, Eight, Seven, Six),(Nine, Ten, Eight, Six, Seven),(Nine, Ten, Seven, Eight, Six),(Nine, Ten, Seven, Six, Eight),(Nine, Ten, Six, Eight, Seven),(Nine, Ten, Six, Seven, Eight),(Nine, Eight, Ten, Seven, Six),(Nine, Eight, Ten, Six, Seven),(Nine, Eight, Seven, Ten, Six),(Nine, Eight, Seven, Six, Ten),(Nine, Eight, Six, Ten, Seven),(Nine, Eight, Six, Seven, Ten),(Nine, Seven, Ten, Eight, Six),(Nine, Seven, Ten, Six, Eight),(Nine, Seven, Eight, Ten, Six),(Nine, Seven, Eight, Six, Ten),(Nine, Seven, Six, Ten, Eight),(Nine, Seven, Six, Eight, Ten),(Nine, Six, Ten, Eight, Seven),(Nine, Six, Ten, Seven, Eight),(Nine, Six, Eight, Ten, Seven),(Nine, Six, Eight, Seven, Ten),(Nine, Six, Seven, Ten, Eight),(Nine, Six, Seven, Eight, Ten),(Eight, Ten, Nine, Seven, Six),(Eight, Ten, Nine, Six, Seven),(Eight, Ten, Seven, Nine, Six),(Eight, Ten, Seven, Six, Nine),(Eight, Ten, Six, Nine, Seven),(Eight, Ten, Six, Seven, Nine),(Eight, Nine, Ten, Seven, Six),(Eight, Nine, Ten, Six, Seven),(Eight, Nine, Seven, Ten, Six),(Eight, Nine, Seven, Six, Ten),(Eight, Nine, Six, Ten, Seven),(Eight, Nine, Six, Seven, Ten),(Eight, Seven, Ten, Nine, Six),(Eight, Seven, Ten, Six, Nine),(Eight, Seven, Nine, Ten, Six),(Eight, Seven, Nine, Six, Ten),(Eight, Seven, Six, Ten, Nine),(Eight, Seven, Six, Nine, Ten),(Eight, Six, Ten, Nine, Seven),(Eight, Six, Ten, Seven, Nine),(Eight, Six, Nine, Ten, Seven),(Eight, Six, Nine, Seven, Ten),(Eight, Six, Seven, Ten, Nine),(Eight, Six, Seven, Nine, Ten),(Seven, Ten, Nine, Eight, Six),(Seven, Ten, Nine, Six, Eight),(Seven, Ten, Eight, Nine, Six),(Seven, Ten, Eight, Six, Nine),(Seven, Ten, Six, Nine, Eight),(Seven, Ten, Six, Eight, Nine),(Seven, Nine, Ten, Eight, Six),(Seven, Nine, Ten, Six, Eight),(Seven, Nine, Eight, Ten, Six),(Seven, Nine, Eight, Six, Ten),(Seven, Nine, Six, Ten, Eight),(Seven, Nine, Six, Eight, Ten),(Seven, Eight, Ten, Nine, Six),(Seven, Eight, Ten, Six, Nine),(Seven, Eight, Nine, Ten, Six),(Seven, Eight, Nine, Six, Ten),(Seven, Eight, Six, Ten, Nine),(Seven, Eight, Six, Nine, Ten),(Seven, Six, Ten, Nine, Eight),(Seven, Six, Ten, Eight, Nine),(Seven, Six, Nine, Ten, Eight),(Seven, Six, Nine, Eight, Ten),(Seven, Six, Eight, Ten, Nine),(Seven, Six, Eight, Nine, Ten),(Six, Ten, Nine, Eight, Seven),(Six, Ten, Nine, Seven, Eight),(Six, Ten, Eight, Nine, Seven),(Six, Ten, Eight, Seven, Nine),(Six, Ten, Seven, Nine, Eight),(Six, Ten, Seven, Eight, Nine),(Six, Nine, Ten, Eight, Seven),(Six, Nine, Ten, Seven, Eight),(Six, Nine, Eight, Ten, Seven),(Six, Nine, Eight, Seven, Ten),(Six, Nine, Seven, Ten, Eight),(Six, Nine, Seven, Eight, Ten),(Six, Eight, Ten, Nine, Seven),(Six, Eight, Ten, Seven, Nine),(Six, Eight, Nine, Ten, Seven),(Six, Eight, Nine, Seven, Ten),(Six, Eight, Seven, Ten, Nine),(Six, Eight, Seven, Nine, Ten),(Six, Seven, Ten, Nine, Eight),(Six, Seven, Ten, Eight, Nine),(Six, Seven, Nine, Ten, Eight),(Six, Seven, Nine, Eight, Ten),(Six, Seven, Eight, Ten, Nine),(Six, Seven, Eight, Nine, Ten),(Nine, Eight, Seven, Six, Five),(Nine, Eight, Seven, Five, Six),(Nine, Eight, Six, Seven, Five),(Nine, Eight, Six, Five, Seven),(Nine, Eight, Five, Seven, Six),(Nine, Eight, Five, Six, Seven),(Nine, Seven, Eight, Six, Five),(Nine, Seven, Eight, Five, Six),(Nine, Seven, Six, Eight, Five),(Nine, Seven, Six, Five, Eight),(Nine, Seven, Five, Eight, Six),(Nine, Seven, Five, Six, Eight),(Nine, Six, Eight, Seven, Five),(Nine, Six, Eight, Five, Seven),(Nine, Six, Seven, Eight, Five),(Nine, Six, Seven, Five, Eight),(Nine, Six, Five, Eight, Seven),(Nine, Six, Five, Seven, Eight),(Nine, Five, Eight, Seven, Six),(Nine, Five, Eight, Six, Seven),(Nine, Five, Seven, Eight, Six),(Nine, Five, Seven, Six, Eight),(Nine, Five, Six, Eight, Seven),(Nine, Five, Six, Seven, Eight),(Eight, Nine, Seven, Six, Five),(Eight, Nine, Seven, Five, Six),(Eight, Nine, Six, Seven, Five),(Eight, Nine, Six, Five, Seven),(Eight, Nine, Five, Seven, Six),(Eight, Nine, Five, Six, Seven),(Eight, Seven, Nine, Six, Five),(Eight, Seven, Nine, Five, Six),(Eight, Seven, Six, Nine, Five),(Eight, Seven, Six, Five, Nine),(Eight, Seven, Five, Nine, Six),(Eight, Seven, Five, Six, Nine),(Eight, Six, Nine, Seven, Five),(Eight, Six, Nine, Five, Seven),(Eight, Six, Seven, Nine, Five),(Eight, Six, Seven, Five, Nine),(Eight, Six, Five, Nine, Seven),(Eight, Six, Five, Seven, Nine),(Eight, Five, Nine, Seven, Six),(Eight, Five, Nine, Six, Seven),(Eight, Five, Seven, Nine, Six),(Eight, Five, Seven, Six, Nine),(Eight, Five, Six, Nine, Seven),(Eight, Five, Six, Seven, Nine),(Seven, Nine, Eight, Six, Five),(Seven, Nine, Eight, Five, Six),(Seven, Nine, Six, Eight, Five),(Seven, Nine, Six, Five, Eight),(Seven, Nine, Five, Eight, Six),(Seven, Nine, Five, Six, Eight),(Seven, Eight, Nine, Six, Five),(Seven, Eight, Nine, Five, Six),(Seven, Eight, Six, Nine, Five),(Seven, Eight, Six, Five, Nine),(Seven, Eight, Five, Nine, Six),(Seven, Eight, Five, Six, Nine),(Seven, Six, Nine, Eight, Five),(Seven, Six, Nine, Five, Eight),(Seven, Six, Eight, Nine, Five),(Seven, Six, Eight, Five, Nine),(Seven, Six, Five, Nine, Eight),(Seven, Six, Five, Eight, Nine),(Seven, Five, Nine, Eight, Six),(Seven, Five, Nine, Six, Eight),(Seven, Five, Eight, Nine, Six),(Seven, Five, Eight, Six, Nine),(Seven, Five, Six, Nine, Eight),(Seven, Five, Six, Eight, Nine),(Six, Nine, Eight, Seven, Five),(Six, Nine, Eight, Five, Seven),(Six, Nine, Seven, Eight, Five),(Six, Nine, Seven, Five, Eight),(Six, Nine, Five, Eight, Seven),(Six, Nine, Five, Seven, Eight),(Six, Eight, Nine, Seven, Five),(Six, Eight, Nine, Five, Seven),(Six, Eight, Seven, Nine, Five),(Six, Eight, Seven, Five, Nine),(Six, Eight, Five, Nine, Seven),(Six, Eight, Five, Seven, Nine),(Six, Seven, Nine, Eight, Five),(Six, Seven, Nine, Five, Eight),(Six, Seven, Eight, Nine, Five),(Six, Seven, Eight, Five, Nine),(Six, Seven, Five, Nine, Eight),(Six, Seven, Five, Eight, Nine),(Six, Five, Nine, Eight, Seven),(Six, Five, Nine, Seven, Eight),(Six, Five, Eight, Nine, Seven),(Six, Five, Eight, Seven, Nine),(Six, Five, Seven, Nine, Eight),(Six, Five, Seven, Eight, Nine),(Five, Nine, Eight, Seven, Six),(Five, Nine, Eight, Six, Seven),(Five, Nine, Seven, Eight, Six),(Five, Nine, Seven, Six, Eight),(Five, Nine, Six, Eight, Seven),(Five, Nine, Six, Seven, Eight),(Five, Eight, Nine, Seven, Six),(Five, Eight, Nine, Six, Seven),(Five, Eight, Seven, Nine, Six),(Five, Eight, Seven, Six, Nine),(Five, Eight, Six, Nine, Seven),(Five, Eight, Six, Seven, Nine),(Five, Seven, Nine, Eight, Six),(Five, Seven, Nine, Six, Eight),(Five, Seven, Eight, Nine, Six),(Five, Seven, Eight, Six, Nine),(Five, Seven, Six, Nine, Eight),(Five, Seven, Six, Eight, Nine),(Five, Six, Nine, Eight, Seven),(Five, Six, Nine, Seven, Eight),(Five, Six, Eight, Nine, Seven),(Five, Six, Eight, Seven, Nine),(Five, Six, Seven, Nine, Eight),(Five, Six, Seven, Eight, Nine),(Eight, Seven, Six, Five, Four),(Eight, Seven, Six, Four, Five),(Eight, Seven, Five, Six, Four),(Eight, Seven, Five, Four, Six),(Eight, Seven, Four, Six, Five),(Eight, Seven, Four, Five, Six),(Eight, Six, Seven, Five, Four),(Eight, Six, Seven, Four, Five),(Eight, Six, Five, Seven, Four),(Eight, Six, Five, Four, Seven),(Eight, Six, Four, Seven, Five),(Eight, Six, Four, Five, Seven),(Eight, Five, Seven, Six, Four),(Eight, Five, Seven, Four, Six),(Eight, Five, Six, Seven, Four),(Eight, Five, Six, Four, Seven),(Eight, Five, Four, Seven, Six),(Eight, Five, Four, Six, Seven),(Eight, Four, Seven, Six, Five),(Eight, Four, Seven, Five, Six),(Eight, Four, Six, Seven, Five),(Eight, Four, Six, Five, Seven),(Eight, Four, Five, Seven, Six),(Eight, Four, Five, Six, Seven),(Seven, Eight, Six, Five, Four),(Seven, Eight, Six, Four, Five),(Seven, Eight, Five, Six, Four),(Seven, Eight, Five, Four, Six),(Seven, Eight, Four, Six, Five),(Seven, Eight, Four, Five, Six),(Seven, Six, Eight, Five, Four),(Seven, Six, Eight, Four, Five),(Seven, Six, Five, Eight, Four),(Seven, Six, Five, Four, Eight),(Seven, Six, Four, Eight, Five),(Seven, Six, Four, Five, Eight),(Seven, Five, Eight, Six, Four),(Seven, Five, Eight, Four, Six),(Seven, Five, Six, Eight, Four),(Seven, Five, Six, Four, Eight),(Seven, Five, Four, Eight, Six),(Seven, Five, Four, Six, Eight),(Seven, Four, Eight, Six, Five),(Seven, Four, Eight, Five, Six),(Seven, Four, Six, Eight, Five),(Seven, Four, Six, Five, Eight),(Seven, Four, Five, Eight, Six),(Seven, Four, Five, Six, Eight),(Six, Eight, Seven, Five, Four),(Six, Eight, Seven, Four, Five),(Six, Eight, Five, Seven, Four),(Six, Eight, Five, Four, Seven),(Six, Eight, Four, Seven, Five),(Six, Eight, Four, Five, Seven),(Six, Seven, Eight, Five, Four),(Six, Seven, Eight, Four, Five),(Six, Seven, Five, Eight, Four),(Six, Seven, Five, Four, Eight),(Six, Seven, Four, Eight, Five),(Six, Seven, Four, Five, Eight),(Six, Five, Eight, Seven, Four),(Six, Five, Eight, Four, Seven),(Six, Five, Seven, Eight, Four),(Six, Five, Seven, Four, Eight),(Six, Five, Four, Eight, Seven),(Six, Five, Four, Seven, Eight),(Six, Four, Eight, Seven, Five),(Six, Four, Eight, Five, Seven),(Six, Four, Seven, Eight, Five),(Six, Four, Seven, Five, Eight),(Six, Four, Five, Eight, Seven),(Six, Four, Five, Seven, Eight),(Five, Eight, Seven, Six, Four),(Five, Eight, Seven, Four, Six),(Five, Eight, Six, Seven, Four),(Five, Eight, Six, Four, Seven),(Five, Eight, Four, Seven, Six),(Five, Eight, Four, Six, Seven),(Five, Seven, Eight, Six, Four),(Five, Seven, Eight, Four, Six),(Five, Seven, Six, Eight, Four),(Five, Seven, Six, Four, Eight),(Five, Seven, Four, Eight, Six),(Five, Seven, Four, Six, Eight),(Five, Six, Eight, Seven, Four),(Five, Six, Eight, Four, Seven),(Five, Six, Seven, Eight, Four),(Five, Six, Seven, Four, Eight),(Five, Six, Four, Eight, Seven),(Five, Six, Four, Seven, Eight),(Five, Four, Eight, Seven, Six),(Five, Four, Eight, Six, Seven),(Five, Four, Seven, Eight, Six),(Five, Four, Seven, Six, Eight),(Five, Four, Six, Eight, Seven),(Five, Four, Six, Seven, Eight),(Four, Eight, Seven, Six, Five),(Four, Eight, Seven, Five, Six),(Four, Eight, Six, Seven, Five),(Four, Eight, Six, Five, Seven),(Four, Eight, Five, Seven, Six),(Four, Eight, Five, Six, Seven),(Four, Seven, Eight, Six, Five),(Four, Seven, Eight, Five, Six),(Four, Seven, Six, Eight, Five),(Four, Seven, Six, Five, Eight),(Four, Seven, Five, Eight, Six),(Four, Seven, Five, Six, Eight),(Four, Six, Eight, Seven, Five),(Four, Six, Eight, Five, Seven),(Four, Six, Seven, Eight, Five),(Four, Six, Seven, Five, Eight),(Four, Six, Five, Eight, Seven),(Four, Six, Five, Seven, Eight),(Four, Five, Eight, Seven, Six),(Four, Five, Eight, Six, Seven),(Four, Five, Seven, Eight, Six),(Four, Five, Seven, Six, Eight),(Four, Five, Six, Eight, Seven),(Four, Five, Six, Seven, Eight),(Seven, Six, Five, Four, Three),(Seven, Six, Five, Three, Four),(Seven, Six, Four, Five, Three),(Seven, Six, Four, Three, Five),(Seven, Six, Three, Five, Four),(Seven, Six, Three, Four, Five),(Seven, Five, Six, Four, Three),(Seven, Five, Six, Three, Four),(Seven, Five, Four, Six, Three),(Seven, Five, Four, Three, Six),(Seven, Five, Three, Six, Four),(Seven, Five, Three, Four, Six),(Seven, Four, Six, Five, Three),(Seven, Four, Six, Three, Five),(Seven, Four, Five, Six, Three),(Seven, Four, Five, Three, Six),(Seven, Four, Three, Six, Five),(Seven, Four, Three, Five, Six),(Seven, Three, Six, Five, Four),(Seven, Three, Six, Four, Five),(Seven, Three, Five, Six, Four),(Seven, Three, Five, Four, Six),(Seven, Three, Four, Six, Five),(Seven, Three, Four, Five, Six),(Six, Seven, Five, Four, Three),(Six, Seven, Five, Three, Four),(Six, Seven, Four, Five, Three),(Six, Seven, Four, Three, Five),(Six, Seven, Three, Five, Four),(Six, Seven, Three, Four, Five),(Six, Five, Seven, Four, Three),(Six, Five, Seven, Three, Four),(Six, Five, Four, Seven, Three),(Six, Five, Four, Three, Seven),(Six, Five, Three, Seven, Four),(Six, Five, Three, Four, Seven),(Six, Four, Seven, Five, Three),(Six, Four, Seven, Three, Five),(Six, Four, Five, Seven, Three),(Six, Four, Five, Three, Seven),(Six, Four, Three, Seven, Five),(Six, Four, Three, Five, Seven),(Six, Three, Seven, Five, Four),(Six, Three, Seven, Four, Five),(Six, Three, Five, Seven, Four),(Six, Three, Five, Four, Seven),(Six, Three, Four, Seven, Five),(Six, Three, Four, Five, Seven),(Five, Seven, Six, Four, Three),(Five, Seven, Six, Three, Four),(Five, Seven, Four, Six, Three),(Five, Seven, Four, Three, Six),(Five, Seven, Three, Six, Four),(Five, Seven, Three, Four, Six),(Five, Six, Seven, Four, Three),(Five, Six, Seven, Three, Four),(Five, Six, Four, Seven, Three),(Five, Six, Four, Three, Seven),(Five, Six, Three, Seven, Four),(Five, Six, Three, Four, Seven),(Five, Four, Seven, Six, Three),(Five, Four, Seven, Three, Six),(Five, Four, Six, Seven, Three),(Five, Four, Six, Three, Seven),(Five, Four, Three, Seven, Six),(Five, Four, Three, Six, Seven),(Five, Three, Seven, Six, Four),(Five, Three, Seven, Four, Six),(Five, Three, Six, Seven, Four),(Five, Three, Six, Four, Seven),(Five, Three, Four, Seven, Six),(Five, Three, Four, Six, Seven),(Four, Seven, Six, Five, Three),(Four, Seven, Six, Three, Five),(Four, Seven, Five, Six, Three),(Four, Seven, Five, Three, Six),(Four, Seven, Three, Six, Five),(Four, Seven, Three, Five, Six),(Four, Six, Seven, Five, Three),(Four, Six, Seven, Three, Five),(Four, Six, Five, Seven, Three),(Four, Six, Five, Three, Seven),(Four, Six, Three, Seven, Five),(Four, Six, Three, Five, Seven),(Four, Five, Seven, Six, Three),(Four, Five, Seven, Three, Six),(Four, Five, Six, Seven, Three),(Four, Five, Six, Three, Seven),(Four, Five, Three, Seven, Six),(Four, Five, Three, Six, Seven),(Four, Three, Seven, Six, Five),(Four, Three, Seven, Five, Six),(Four, Three, Six, Seven, Five),(Four, Three, Six, Five, Seven),(Four, Three, Five, Seven, Six),(Four, Three, Five, Six, Seven),(Three, Seven, Six, Five, Four),(Three, Seven, Six, Four, Five),(Three, Seven, Five, Six, Four),(Three, Seven, Five, Four, Six),(Three, Seven, Four, Six, Five),(Three, Seven, Four, Five, Six),(Three, Six, Seven, Five, Four),(Three, Six, Seven, Four, Five),(Three, Six, Five, Seven, Four),(Three, Six, Five, Four, Seven),(Three, Six, Four, Seven, Five),(Three, Six, Four, Five, Seven),(Three, Five, Seven, Six, Four),(Three, Five, Seven, Four, Six),(Three, Five, Six, Seven, Four),(Three, Five, Six, Four, Seven),(Three, Five, Four, Seven, Six),(Three, Five, Four, Six, Seven),(Three, Four, Seven, Six, Five),(Three, Four, Seven, Five, Six),(Three, Four, Six, Seven, Five),(Three, Four, Six, Five, Seven),(Three, Four, Five, Seven, Six),(Three, Four, Five, Six, Seven),(Six, Five, Four, Three, Two),(Six, Five, Four, Two, Three),(Six, Five, Three, Four, Two),(Six, Five, Three, Two, Four),(Six, Five, Two, Four, Three),(Six, Five, Two, Three, Four),(Six, Four, Five, Three, Two),(Six, Four, Five, Two, Three),(Six, Four, Three, Five, Two),(Six, Four, Three, Two, Five),(Six, Four, Two, Five, Three),(Six, Four, Two, Three, Five),(Six, Three, Five, Four, Two),(Six, Three, Five, Two, Four),(Six, Three, Four, Five, Two),(Six, Three, Four, Two, Five),(Six, Three, Two, Five, Four),(Six, Three, Two, Four, Five),(Six, Two, Five, Four, Three),(Six, Two, Five, Three, Four),(Six, Two, Four, Five, Three),(Six, Two, Four, Three, Five),(Six, Two, Three, Five, Four),(Six, Two, Three, Four, Five),(Five, Six, Four, Three, Two),(Five, Six, Four, Two, Three),(Five, Six, Three, Four, Two),(Five, Six, Three, Two, Four),(Five, Six, Two, Four, Three),(Five, Six, Two, Three, Four),(Five, Four, Six, Three, Two),(Five, Four, Six, Two, Three),(Five, Four, Three, Six, Two),(Five, Four, Three, Two, Six),(Five, Four, Two, Six, Three),(Five, Four, Two, Three, Six),(Five, Three, Six, Four, Two),(Five, Three, Six, Two, Four),(Five, Three, Four, Six, Two),(Five, Three, Four, Two, Six),(Five, Three, Two, Six, Four),(Five, Three, Two, Four, Six),(Five, Two, Six, Four, Three),(Five, Two, Six, Three, Four),(Five, Two, Four, Six, Three),(Five, Two, Four, Three, Six),(Five, Two, Three, Six, Four),(Five, Two, Three, Four, Six),(Four, Six, Five, Three, Two),(Four, Six, Five, Two, Three),(Four, Six, Three, Five, Two),(Four, Six, Three, Two, Five),(Four, Six, Two, Five, Three),(Four, Six, Two, Three, Five),(Four, Five, Six, Three, Two),(Four, Five, Six, Two, Three),(Four, Five, Three, Six, Two),(Four, Five, Three, Two, Six),(Four, Five, Two, Six, Three),(Four, Five, Two, Three, Six),(Four, Three, Six, Five, Two),(Four, Three, Six, Two, Five),(Four, Three, Five, Six, Two),(Four, Three, Five, Two, Six),(Four, Three, Two, Six, Five),(Four, Three, Two, Five, Six),(Four, Two, Six, Five, Three),(Four, Two, Six, Three, Five),(Four, Two, Five, Six, Three),(Four, Two, Five, Three, Six),(Four, Two, Three, Six, Five),(Four, Two, Three, Five, Six),(Three, Six, Five, Four, Two),(Three, Six, Five, Two, Four),(Three, Six, Four, Five, Two),(Three, Six, Four, Two, Five),(Three, Six, Two, Five, Four),(Three, Six, Two, Four, Five),(Three, Five, Six, Four, Two),(Three, Five, Six, Two, Four),(Three, Five, Four, Six, Two),(Three, Five, Four, Two, Six),(Three, Five, Two, Six, Four),(Three, Five, Two, Four, Six),(Three, Four, Six, Five, Two),(Three, Four, Six, Two, Five),(Three, Four, Five, Six, Two),(Three, Four, Five, Two, Six),(Three, Four, Two, Six, Five),(Three, Four, Two, Five, Six),(Three, Two, Six, Five, Four),(Three, Two, Six, Four, Five),(Three, Two, Five, Six, Four),(Three, Two, Five, Four, Six),(Three, Two, Four, Six, Five),(Three, Two, Four, Five, Six),(Two, Six, Five, Four, Three),(Two, Six, Five, Three, Four),(Two, Six, Four, Five, Three),(Two, Six, Four, Three, Five),(Two, Six, Three, Five, Four),(Two, Six, Three, Four, Five),(Two, Five, Six, Four, Three),(Two, Five, Six, Three, Four),(Two, Five, Four, Six, Three),(Two, Five, Four, Three, Six),(Two, Five, Three, Six, Four),(Two, Five, Three, Four, Six),(Two, Four, Six, Five, Three),(Two, Four, Six, Three, Five),(Two, Four, Five, Six, Three),(Two, Four, Five, Three, Six),(Two, Four, Three, Six, Five),(Two, Four, Three, Five, Six),(Two, Three, Six, Five, Four),(Two, Three, Six, Four, Five),(Two, Three, Five, Six, Four),(Two, Three, Five, Four, Six),(Two, Three, Four, Six, Five),(Two, Three, Four, Five, Six),(Five, Four, Three, Two, Ace),(Five, Four, Three, Ace, Two),(Five, Four, Two, Three, Ace),(Five, Four, Two, Ace, Three),(Five, Four, Ace, Three, Two),(Five, Four, Ace, Two, Three),(Five, Three, Four, Two, Ace),(Five, Three, Four, Ace, Two),(Five, Three, Two, Four, Ace),(Five, Three, Two, Ace, Four),(Five, Three, Ace, Four, Two),(Five, Three, Ace, Two, Four),(Five, Two, Four, Three, Ace),(Five, Two, Four, Ace, Three),(Five, Two, Three, Four, Ace),(Five, Two, Three, Ace, Four),(Five, Two, Ace, Four, Three),(Five, Two, Ace, Three, Four),(Five, Ace, Four, Three, Two),(Five, Ace, Four, Two, Three),(Five, Ace, Three, Four, Two),(Five, Ace, Three, Two, Four),(Five, Ace, Two, Four, Three),(Five, Ace, Two, Three, Four),(Four, Five, Three, Two, Ace),(Four, Five, Three, Ace, Two),(Four, Five, Two, Three, Ace),(Four, Five, Two, Ace, Three),(Four, Five, Ace, Three, Two),(Four, Five, Ace, Two, Three),(Four, Three, Five, Two, Ace),(Four, Three, Five, Ace, Two),(Four, Three, Two, Five, Ace),(Four, Three, Two, Ace, Five),(Four, Three, Ace, Five, Two),(Four, Three, Ace, Two, Five),(Four, Two, Five, Three, Ace),(Four, Two, Five, Ace, Three),(Four, Two, Three, Five, Ace),(Four, Two, Three, Ace, Five),(Four, Two, Ace, Five, Three),(Four, Two, Ace, Three, Five),(Four, Ace, Five, Three, Two),(Four, Ace, Five, Two, Three),(Four, Ace, Three, Five, Two),(Four, Ace, Three, Two, Five),(Four, Ace, Two, Five, Three),(Four, Ace, Two, Three, Five),(Three, Five, Four, Two, Ace),(Three, Five, Four, Ace, Two),(Three, Five, Two, Four, Ace),(Three, Five, Two, Ace, Four),(Three, Five, Ace, Four, Two),(Three, Five, Ace, Two, Four),(Three, Four, Five, Two, Ace),(Three, Four, Five, Ace, Two),(Three, Four, Two, Five, Ace),(Three, Four, Two, Ace, Five),(Three, Four, Ace, Five, Two),(Three, Four, Ace, Two, Five),(Three, Two, Five, Four, Ace),(Three, Two, Five, Ace, Four),(Three, Two, Four, Five, Ace),(Three, Two, Four, Ace, Five),(Three, Two, Ace, Five, Four),(Three, Two, Ace, Four, Five),(Three, Ace, Five, Four, Two),(Three, Ace, Five, Two, Four),(Three, Ace, Four, Five, Two),(Three, Ace, Four, Two, Five),(Three, Ace, Two, Five, Four),(Three, Ace, Two, Four, Five),(Two, Five, Four, Three, Ace),(Two, Five, Four, Ace, Three),(Two, Five, Three, Four, Ace),(Two, Five, Three, Ace, Four),(Two, Five, Ace, Four, Three),(Two, Five, Ace, Three, Four),(Two, Four, Five, Three, Ace),(Two, Four, Five, Ace, Three),(Two, Four, Three, Five, Ace),(Two, Four, Three, Ace, Five),(Two, Four, Ace, Five, Three),(Two, Four, Ace, Three, Five),(Two, Three, Five, Four, Ace),(Two, Three, Five, Ace, Four),(Two, Three, Four, Five, Ace),(Two, Three, Four, Ace, Five),(Two, Three, Ace, Five, Four),(Two, Three, Ace, Four, Five),(Two, Ace, Five, Four, Three),(Two, Ace, Five, Three, Four),(Two, Ace, Four, Five, Three),(Two, Ace, Four, Three, Five),(Two, Ace, Three, Five, Four),(Two, Ace, Three, Four, Five),(Ace, Five, Four, Three, Two),(Ace, Five, Four, Two, Three),(Ace, Five, Three, Four, Two),(Ace, Five, Three, Two, Four),(Ace, Five, Two, Four, Three),(Ace, Five, Two, Three, Four),(Ace, Four, Five, Three, Two),(Ace, Four, Five, Two, Three),(Ace, Four, Three, Five, Two),(Ace, Four, Three, Two, Five),(Ace, Four, Two, Five, Three),(Ace, Four, Two, Three, Five),(Ace, Three, Five, Four, Two),(Ace, Three, Five, Two, Four),(Ace, Three, Four, Five, Two),(Ace, Three, Four, Two, Five),(Ace, Three, Two, Five, Four),(Ace, Three, Two, Four, Five),(Ace, Two, Five, Four, Three),(Ace, Two, Five, Three, Four),(Ace, Two, Four, Five, Three),(Ace, Two, Four, Three, Five),(Ace, Two, Three, Five, Four),(Ace, Two, Three, Four, Five)] ))

isFourOfAKind :: (Card,Card,Card,Card,Card)->Bool
isFourOfAKind (c1,c2,c3,c4,c5)=
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5) && (rank c1)==(rank c2)&&(rank c1)==(rank c3)&&(rank c1)==(rank c4) ||
  (rank c1) == (rank c2) && (rank c1) == (rank c3) && (rank c1) == (rank c5) ||
  (rank c1) == (rank c2) && (rank c1) == (rank c4) && (rank c1) == (rank c5) ||
  (rank c1) == (rank c3) && (rank c1) == (rank c4) && (rank c1) == (rank c5) ||
  (rank c2) == (rank c3) && (rank c2) == (rank c4) && (rank c2) == (rank c5)

getFourOfAKind :: (Card,Card,Card,Card,Card)->Integer
getFourOfAKind (c1,c2,c3,c4,c5)
  | (rank c1)==(rank c2)&&(rank c1)==(rank c3)&&(rank c1)==(rank c4) = getValue c1
  | (rank c1)==(rank c2)&&(rank c1)==(rank c3)&&(rank c1)==(rank c5) = getValue c1
  | (rank c1)==(rank c2)&&(rank c1)==(rank c4)&&(rank c1)==(rank c5) = getValue c1
  | (rank c1)==(rank c3)&&(rank c1)==(rank c4)&&(rank c1)==(rank c5) = getValue c1
  | (rank c2)==(rank c3)&&(rank c2)==(rank c4)&&(rank c2)==(rank c5) = getValue c5

isFullHouse :: (Card,Card,Card,Card,Card)->Bool
isFullHouse (c1,c2,c3,c4,c5)=
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5) &&(rank c1)==(rank c2)&&(rank c1)==(rank c3)&&(rank c4)==(rank c5)
  ||(rank c1)==(rank c2)&&(rank c1)==(rank c4)&&(rank c3)==(rank c5)
  ||(rank c1)==(rank c3)&&(rank c1)==(rank c4)&&(rank c2)==(rank c5)
  ||(rank c2)==(rank c3)&&(rank c2)==(rank c4)&&(rank c1)==(rank c5)
  ||(rank c1)==(rank c4)&&(rank c2)==(rank c3)&&(rank c2)==(rank c5)
  ||(rank c2)==(rank c4)&&(rank c1)==(rank c3)&&(rank c1)==(rank c5)
  ||(rank c3)==(rank c4)&&(rank c1)==(rank c2)&&(rank c1)==(rank c5)
  ||(rank c1)==(rank c3)&&(rank c2)==(rank c4)&&(rank c2)==(rank c5)
  ||(rank c2)==(rank c3)&&(rank c1)==(rank c4)&&(rank c1)==(rank c5)
  ||(rank c1)==(rank c2)&&(rank c3)==(rank c4)&&(rank c3)==(rank c5)

getFullHouse :: (Card,Card,Card,Card,Card) -> Integer
getFullHouse (c1,c2,c3,c4,c5)
  | (rank c1)==(rank c2)&&(rank c1)==(rank c3) = getValue c1
  | (rank c1)==(rank c2)&&(rank c1)==(rank c4) = getValue c1
  | (rank c1)==(rank c3)&&(rank c1)==(rank c4) = getValue c1
  | (rank c2)==(rank c3)&&(rank c2)==(rank c4) = getValue c2
  | (rank c2)==(rank c3)&&(rank c2)==(rank c5) = getValue c2
  | (rank c1)==(rank c3)&&(rank c1)==(rank c5) = getValue c1
  | (rank c1)==(rank c2)&&(rank c1)==(rank c5) = getValue c1
  | (rank c2)==(rank c4)&&(rank c2)==(rank c5) = getValue c2
  | (rank c1)==(rank c4)&&(rank c1)==(rank c5) = getValue c1
  | (rank c3)==(rank c4)&&(rank c3)==(rank c5) = getValue c3

getFullHousePair :: (Card,Card,Card,Card,Card) -> Integer
getFullHousePair (c1,c2,c3,c4,c5)
  | (rank c1)==(rank c2)&&(rank c1)==(rank c3) = getValue c5
  | (rank c1)==(rank c2)&&(rank c1)==(rank c4) = getValue c5
  | (rank c1)==(rank c3)&&(rank c1)==(rank c4) = getValue c5
  | (rank c2)==(rank c3)&&(rank c2)==(rank c4) = getValue c5
  | (rank c2)==(rank c3)&&(rank c2)==(rank c5) = getValue c1
  | (rank c1)==(rank c3)&&(rank c1)==(rank c5) = getValue c2
  | (rank c1)==(rank c2)&&(rank c1)==(rank c5) = getValue c4
  | (rank c2)==(rank c4)&&(rank c2)==(rank c5) = getValue c1
  | (rank c1)==(rank c4)&&(rank c1)==(rank c5) = getValue c2
  | (rank c3)==(rank c4)&&(rank c3)==(rank c5) = getValue c2
isFlush :: (Card,Card,Card,Card,Card)->Bool
isFlush (c1,c2,c3,c4,c5)=
  (suit c1)==(suit c2)&&(suit c1)==(suit c3)&&(suit c1)==(suit c4)&&(suit c1)==(suit c5)&&
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5)


isStraight :: (Card,Card,Card,Card,Card)->Bool
isStraight (c1,c2,c3,c4,c5)=
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5) &&
  (or (map (((rank c1),(rank c2),(rank c3),(rank c4),(rank c5)) == ) [(Ace, King, Queen, Jack, Ten),(Ace, King, Queen, Ten, Jack),(Ace, King, Jack, Queen, Ten),(Ace, King, Jack, Ten, Queen),(Ace, King, Ten, Queen, Jack),(Ace, King, Ten, Jack, Queen),(Ace, Queen, King, Jack, Ten),(Ace, Queen, King, Ten, Jack),(Ace, Queen, Jack, King, Ten),(Ace, Queen, Jack, Ten, King),(Ace, Queen, Ten, King, Jack),(Ace, Queen, Ten, Jack, King),(Ace, Jack, King, Queen, Ten),(Ace, Jack, King, Ten, Queen),(Ace, Jack, Queen, King, Ten),(Ace, Jack, Queen, Ten, King),(Ace, Jack, Ten, King, Queen),(Ace, Jack, Ten, Queen, King),(Ace, Ten, King, Queen, Jack),(Ace, Ten, King, Jack, Queen),(Ace, Ten, Queen, King, Jack),(Ace, Ten, Queen, Jack, King),(Ace, Ten, Jack, King, Queen),(Ace, Ten, Jack, Queen, King),(King, Ace, Queen, Jack, Ten),(King, Ace, Queen, Ten, Jack),(King, Ace, Jack, Queen, Ten),(King, Ace, Jack, Ten, Queen),(King, Ace, Ten, Queen, Jack),(King, Ace, Ten, Jack, Queen),(King, Queen, Ace, Jack, Ten),(King, Queen, Ace, Ten, Jack),(King, Queen, Jack, Ace, Ten),(King, Queen, Jack, Ten, Ace),(King, Queen, Ten, Ace, Jack),(King, Queen, Ten, Jack, Ace),(King, Jack, Ace, Queen, Ten),(King, Jack, Ace, Ten, Queen),(King, Jack, Queen, Ace, Ten),(King, Jack, Queen, Ten, Ace),(King, Jack, Ten, Ace, Queen),(King, Jack, Ten, Queen, Ace),(King, Ten, Ace, Queen, Jack),(King, Ten, Ace, Jack, Queen),(King, Ten, Queen, Ace, Jack),(King, Ten, Queen, Jack, Ace),(King, Ten, Jack, Ace, Queen),(King, Ten, Jack, Queen, Ace),(Queen, Ace, King, Jack, Ten),(Queen, Ace, King, Ten, Jack),(Queen, Ace, Jack, King, Ten),(Queen, Ace, Jack, Ten, King),(Queen, Ace, Ten, King, Jack),(Queen, Ace, Ten, Jack, King),(Queen, King, Ace, Jack, Ten),(Queen, King, Ace, Ten, Jack),(Queen, King, Jack, Ace, Ten),(Queen, King, Jack, Ten, Ace),(Queen, King, Ten, Ace, Jack),(Queen, King, Ten, Jack, Ace),(Queen, Jack, Ace, King, Ten),(Queen, Jack, Ace, Ten, King),(Queen, Jack, King, Ace, Ten),(Queen, Jack, King, Ten, Ace),(Queen, Jack, Ten, Ace, King),(Queen, Jack, Ten, King, Ace),(Queen, Ten, Ace, King, Jack),(Queen, Ten, Ace, Jack, King),(Queen, Ten, King, Ace, Jack),(Queen, Ten, King, Jack, Ace),(Queen, Ten, Jack, Ace, King),(Queen, Ten, Jack, King, Ace),(Jack, Ace, King, Queen, Ten),(Jack, Ace, King, Ten, Queen),(Jack, Ace, Queen, King, Ten),(Jack, Ace, Queen, Ten, King),(Jack, Ace, Ten, King, Queen),(Jack, Ace, Ten, Queen, King),(Jack, King, Ace, Queen, Ten),(Jack, King, Ace, Ten, Queen),(Jack, King, Queen, Ace, Ten),(Jack, King, Queen, Ten, Ace),(Jack, King, Ten, Ace, Queen),(Jack, King, Ten, Queen, Ace),(Jack, Queen, Ace, King, Ten),(Jack, Queen, Ace, Ten, King),(Jack, Queen, King, Ace, Ten),(Jack, Queen, King, Ten, Ace),(Jack, Queen, Ten, Ace, King),(Jack, Queen, Ten, King, Ace),(Jack, Ten, Ace, King, Queen),(Jack, Ten, Ace, Queen, King),(Jack, Ten, King, Ace, Queen),(Jack, Ten, King, Queen, Ace),(Jack, Ten, Queen, Ace, King),(Jack, Ten, Queen, King, Ace),(Ten, Ace, King, Queen, Jack),(Ten, Ace, King, Jack, Queen),(Ten, Ace, Queen, King, Jack),(Ten, Ace, Queen, Jack, King),(Ten, Ace, Jack, King, Queen),(Ten, Ace, Jack, Queen, King),(Ten, King, Ace, Queen, Jack),(Ten, King, Ace, Jack, Queen),(Ten, King, Queen, Ace, Jack),(Ten, King, Queen, Jack, Ace),(Ten, King, Jack, Ace, Queen),(Ten, King, Jack, Queen, Ace),(Ten, Queen, Ace, King, Jack),(Ten, Queen, Ace, Jack, King),(Ten, Queen, King, Ace, Jack),(Ten, Queen, King, Jack, Ace),(Ten, Queen, Jack, Ace, King),(Ten, Queen, Jack, King, Ace),(Ten, Jack, Ace, King, Queen),(Ten, Jack, Ace, Queen, King),(Ten, Jack, King, Ace, Queen),(Ten, Jack, King, Queen, Ace),(Ten, Jack, Queen, Ace, King),(Ten, Jack, Queen, King, Ace),(King, Queen, Jack, Ten, Nine),(King, Queen, Jack, Nine, Ten),(King, Queen, Ten, Jack, Nine),(King, Queen, Ten, Nine, Jack),(King, Queen, Nine, Jack, Ten),(King, Queen, Nine, Ten, Jack),(King, Jack, Queen, Ten, Nine),(King, Jack, Queen, Nine, Ten),(King, Jack, Ten, Queen, Nine),(King, Jack, Ten, Nine, Queen),(King, Jack, Nine, Queen, Ten),(King, Jack, Nine, Ten, Queen),(King, Ten, Queen, Jack, Nine),(King, Ten, Queen, Nine, Jack),(King, Ten, Jack, Queen, Nine),(King, Ten, Jack, Nine, Queen),(King, Ten, Nine, Queen, Jack),(King, Ten, Nine, Jack, Queen),(King, Nine, Queen, Jack, Ten),(King, Nine, Queen, Ten, Jack),(King, Nine, Jack, Queen, Ten),(King, Nine, Jack, Ten, Queen),(King, Nine, Ten, Queen, Jack),(King, Nine, Ten, Jack, Queen),(Queen, King, Jack, Ten, Nine),(Queen, King, Jack, Nine, Ten),(Queen, King, Ten, Jack, Nine),(Queen, King, Ten, Nine, Jack),(Queen, King, Nine, Jack, Ten),(Queen, King, Nine, Ten, Jack),(Queen, Jack, King, Ten, Nine),(Queen, Jack, King, Nine, Ten),(Queen, Jack, Ten, King, Nine),(Queen, Jack, Ten, Nine, King),(Queen, Jack, Nine, King, Ten),(Queen, Jack, Nine, Ten, King),(Queen, Ten, King, Jack, Nine),(Queen, Ten, King, Nine, Jack),(Queen, Ten, Jack, King, Nine),(Queen, Ten, Jack, Nine, King),(Queen, Ten, Nine, King, Jack),(Queen, Ten, Nine, Jack, King),(Queen, Nine, King, Jack, Ten),(Queen, Nine, King, Ten, Jack),(Queen, Nine, Jack, King, Ten),(Queen, Nine, Jack, Ten, King),(Queen, Nine, Ten, King, Jack),(Queen, Nine, Ten, Jack, King),(Jack, King, Queen, Ten, Nine),(Jack, King, Queen, Nine, Ten),(Jack, King, Ten, Queen, Nine),(Jack, King, Ten, Nine, Queen),(Jack, King, Nine, Queen, Ten),(Jack, King, Nine, Ten, Queen),(Jack, Queen, King, Ten, Nine),(Jack, Queen, King, Nine, Ten),(Jack, Queen, Ten, King, Nine),(Jack, Queen, Ten, Nine, King),(Jack, Queen, Nine, King, Ten),(Jack, Queen, Nine, Ten, King),(Jack, Ten, King, Queen, Nine),(Jack, Ten, King, Nine, Queen),(Jack, Ten, Queen, King, Nine),(Jack, Ten, Queen, Nine, King),(Jack, Ten, Nine, King, Queen),(Jack, Ten, Nine, Queen, King),(Jack, Nine, King, Queen, Ten),(Jack, Nine, King, Ten, Queen),(Jack, Nine, Queen, King, Ten),(Jack, Nine, Queen, Ten, King),(Jack, Nine, Ten, King, Queen),(Jack, Nine, Ten, Queen, King),(Ten, King, Queen, Jack, Nine),(Ten, King, Queen, Nine, Jack),(Ten, King, Jack, Queen, Nine),(Ten, King, Jack, Nine, Queen),(Ten, King, Nine, Queen, Jack),(Ten, King, Nine, Jack, Queen),(Ten, Queen, King, Jack, Nine),(Ten, Queen, King, Nine, Jack),(Ten, Queen, Jack, King, Nine),(Ten, Queen, Jack, Nine, King),(Ten, Queen, Nine, King, Jack),(Ten, Queen, Nine, Jack, King),(Ten, Jack, King, Queen, Nine),(Ten, Jack, King, Nine, Queen),(Ten, Jack, Queen, King, Nine),(Ten, Jack, Queen, Nine, King),(Ten, Jack, Nine, King, Queen),(Ten, Jack, Nine, Queen, King),(Ten, Nine, King, Queen, Jack),(Ten, Nine, King, Jack, Queen),(Ten, Nine, Queen, King, Jack),(Ten, Nine, Queen, Jack, King),(Ten, Nine, Jack, King, Queen),(Ten, Nine, Jack, Queen, King),(Nine, King, Queen, Jack, Ten),(Nine, King, Queen, Ten, Jack),(Nine, King, Jack, Queen, Ten),(Nine, King, Jack, Ten, Queen),(Nine, King, Ten, Queen, Jack),(Nine, King, Ten, Jack, Queen),(Nine, Queen, King, Jack, Ten),(Nine, Queen, King, Ten, Jack),(Nine, Queen, Jack, King, Ten),(Nine, Queen, Jack, Ten, King),(Nine, Queen, Ten, King, Jack),(Nine, Queen, Ten, Jack, King),(Nine, Jack, King, Queen, Ten),(Nine, Jack, King, Ten, Queen),(Nine, Jack, Queen, King, Ten),(Nine, Jack, Queen, Ten, King),(Nine, Jack, Ten, King, Queen),(Nine, Jack, Ten, Queen, King),(Nine, Ten, King, Queen, Jack),(Nine, Ten, King, Jack, Queen),(Nine, Ten, Queen, King, Jack),(Nine, Ten, Queen, Jack, King),(Nine, Ten, Jack, King, Queen),(Nine, Ten, Jack, Queen, King),(Queen, Jack, Ten, Nine, Eight),(Queen, Jack, Ten, Eight, Nine),(Queen, Jack, Nine, Ten, Eight),(Queen, Jack, Nine, Eight, Ten),(Queen, Jack, Eight, Ten, Nine),(Queen, Jack, Eight, Nine, Ten),(Queen, Ten, Jack, Nine, Eight),(Queen, Ten, Jack, Eight, Nine),(Queen, Ten, Nine, Jack, Eight),(Queen, Ten, Nine, Eight, Jack),(Queen, Ten, Eight, Jack, Nine),(Queen, Ten, Eight, Nine, Jack),(Queen, Nine, Jack, Ten, Eight),(Queen, Nine, Jack, Eight, Ten),(Queen, Nine, Ten, Jack, Eight),(Queen, Nine, Ten, Eight, Jack),(Queen, Nine, Eight, Jack, Ten),(Queen, Nine, Eight, Ten, Jack),(Queen, Eight, Jack, Ten, Nine),(Queen, Eight, Jack, Nine, Ten),(Queen, Eight, Ten, Jack, Nine),(Queen, Eight, Ten, Nine, Jack),(Queen, Eight, Nine, Jack, Ten),(Queen, Eight, Nine, Ten, Jack),(Jack, Queen, Ten, Nine, Eight),(Jack, Queen, Ten, Eight, Nine),(Jack, Queen, Nine, Ten, Eight),(Jack, Queen, Nine, Eight, Ten),(Jack, Queen, Eight, Ten, Nine),(Jack, Queen, Eight, Nine, Ten),(Jack, Ten, Queen, Nine, Eight),(Jack, Ten, Queen, Eight, Nine),(Jack, Ten, Nine, Queen, Eight),(Jack, Ten, Nine, Eight, Queen),(Jack, Ten, Eight, Queen, Nine),(Jack, Ten, Eight, Nine, Queen),(Jack, Nine, Queen, Ten, Eight),(Jack, Nine, Queen, Eight, Ten),(Jack, Nine, Ten, Queen, Eight),(Jack, Nine, Ten, Eight, Queen),(Jack, Nine, Eight, Queen, Ten),(Jack, Nine, Eight, Ten, Queen),(Jack, Eight, Queen, Ten, Nine),(Jack, Eight, Queen, Nine, Ten),(Jack, Eight, Ten, Queen, Nine),(Jack, Eight, Ten, Nine, Queen),(Jack, Eight, Nine, Queen, Ten),(Jack, Eight, Nine, Ten, Queen),(Ten, Queen, Jack, Nine, Eight),(Ten, Queen, Jack, Eight, Nine),(Ten, Queen, Nine, Jack, Eight),(Ten, Queen, Nine, Eight, Jack),(Ten, Queen, Eight, Jack, Nine),(Ten, Queen, Eight, Nine, Jack),(Ten, Jack, Queen, Nine, Eight),(Ten, Jack, Queen, Eight, Nine),(Ten, Jack, Nine, Queen, Eight),(Ten, Jack, Nine, Eight, Queen),(Ten, Jack, Eight, Queen, Nine),(Ten, Jack, Eight, Nine, Queen),(Ten, Nine, Queen, Jack, Eight),(Ten, Nine, Queen, Eight, Jack),(Ten, Nine, Jack, Queen, Eight),(Ten, Nine, Jack, Eight, Queen),(Ten, Nine, Eight, Queen, Jack),(Ten, Nine, Eight, Jack, Queen),(Ten, Eight, Queen, Jack, Nine),(Ten, Eight, Queen, Nine, Jack),(Ten, Eight, Jack, Queen, Nine),(Ten, Eight, Jack, Nine, Queen),(Ten, Eight, Nine, Queen, Jack),(Ten, Eight, Nine, Jack, Queen),(Nine, Queen, Jack, Ten, Eight),(Nine, Queen, Jack, Eight, Ten),(Nine, Queen, Ten, Jack, Eight),(Nine, Queen, Ten, Eight, Jack),(Nine, Queen, Eight, Jack, Ten),(Nine, Queen, Eight, Ten, Jack),(Nine, Jack, Queen, Ten, Eight),(Nine, Jack, Queen, Eight, Ten),(Nine, Jack, Ten, Queen, Eight),(Nine, Jack, Ten, Eight, Queen),(Nine, Jack, Eight, Queen, Ten),(Nine, Jack, Eight, Ten, Queen),(Nine, Ten, Queen, Jack, Eight),(Nine, Ten, Queen, Eight, Jack),(Nine, Ten, Jack, Queen, Eight),(Nine, Ten, Jack, Eight, Queen),(Nine, Ten, Eight, Queen, Jack),(Nine, Ten, Eight, Jack, Queen),(Nine, Eight, Queen, Jack, Ten),(Nine, Eight, Queen, Ten, Jack),(Nine, Eight, Jack, Queen, Ten),(Nine, Eight, Jack, Ten, Queen),(Nine, Eight, Ten, Queen, Jack),(Nine, Eight, Ten, Jack, Queen),(Eight, Queen, Jack, Ten, Nine),(Eight, Queen, Jack, Nine, Ten),(Eight, Queen, Ten, Jack, Nine),(Eight, Queen, Ten, Nine, Jack),(Eight, Queen, Nine, Jack, Ten),(Eight, Queen, Nine, Ten, Jack),(Eight, Jack, Queen, Ten, Nine),(Eight, Jack, Queen, Nine, Ten),(Eight, Jack, Ten, Queen, Nine),(Eight, Jack, Ten, Nine, Queen),(Eight, Jack, Nine, Queen, Ten),(Eight, Jack, Nine, Ten, Queen),(Eight, Ten, Queen, Jack, Nine),(Eight, Ten, Queen, Nine, Jack),(Eight, Ten, Jack, Queen, Nine),(Eight, Ten, Jack, Nine, Queen),(Eight, Ten, Nine, Queen, Jack),(Eight, Ten, Nine, Jack, Queen),(Eight, Nine, Queen, Jack, Ten),(Eight, Nine, Queen, Ten, Jack),(Eight, Nine, Jack, Queen, Ten),(Eight, Nine, Jack, Ten, Queen),(Eight, Nine, Ten, Queen, Jack),(Eight, Nine, Ten, Jack, Queen),(Jack, Ten, Nine, Eight, Seven),(Jack, Ten, Nine, Seven, Eight),(Jack, Ten, Eight, Nine, Seven),(Jack, Ten, Eight, Seven, Nine),(Jack, Ten, Seven, Nine, Eight),(Jack, Ten, Seven, Eight, Nine),(Jack, Nine, Ten, Eight, Seven),(Jack, Nine, Ten, Seven, Eight),(Jack, Nine, Eight, Ten, Seven),(Jack, Nine, Eight, Seven, Ten),(Jack, Nine, Seven, Ten, Eight),(Jack, Nine, Seven, Eight, Ten),(Jack, Eight, Ten, Nine, Seven),(Jack, Eight, Ten, Seven, Nine),(Jack, Eight, Nine, Ten, Seven),(Jack, Eight, Nine, Seven, Ten),(Jack, Eight, Seven, Ten, Nine),(Jack, Eight, Seven, Nine, Ten),(Jack, Seven, Ten, Nine, Eight),(Jack, Seven, Ten, Eight, Nine),(Jack, Seven, Nine, Ten, Eight),(Jack, Seven, Nine, Eight, Ten),(Jack, Seven, Eight, Ten, Nine),(Jack, Seven, Eight, Nine, Ten),(Ten, Jack, Nine, Eight, Seven),(Ten, Jack, Nine, Seven, Eight),(Ten, Jack, Eight, Nine, Seven),(Ten, Jack, Eight, Seven, Nine),(Ten, Jack, Seven, Nine, Eight),(Ten, Jack, Seven, Eight, Nine),(Ten, Nine, Jack, Eight, Seven),(Ten, Nine, Jack, Seven, Eight),(Ten, Nine, Eight, Jack, Seven),(Ten, Nine, Eight, Seven, Jack),(Ten, Nine, Seven, Jack, Eight),(Ten, Nine, Seven, Eight, Jack),(Ten, Eight, Jack, Nine, Seven),(Ten, Eight, Jack, Seven, Nine),(Ten, Eight, Nine, Jack, Seven),(Ten, Eight, Nine, Seven, Jack),(Ten, Eight, Seven, Jack, Nine),(Ten, Eight, Seven, Nine, Jack),(Ten, Seven, Jack, Nine, Eight),(Ten, Seven, Jack, Eight, Nine),(Ten, Seven, Nine, Jack, Eight),(Ten, Seven, Nine, Eight, Jack),(Ten, Seven, Eight, Jack, Nine),(Ten, Seven, Eight, Nine, Jack),(Nine, Jack, Ten, Eight, Seven),(Nine, Jack, Ten, Seven, Eight),(Nine, Jack, Eight, Ten, Seven),(Nine, Jack, Eight, Seven, Ten),(Nine, Jack, Seven, Ten, Eight),(Nine, Jack, Seven, Eight, Ten),(Nine, Ten, Jack, Eight, Seven),(Nine, Ten, Jack, Seven, Eight),(Nine, Ten, Eight, Jack, Seven),(Nine, Ten, Eight, Seven, Jack),(Nine, Ten, Seven, Jack, Eight),(Nine, Ten, Seven, Eight, Jack),(Nine, Eight, Jack, Ten, Seven),(Nine, Eight, Jack, Seven, Ten),(Nine, Eight, Ten, Jack, Seven),(Nine, Eight, Ten, Seven, Jack),(Nine, Eight, Seven, Jack, Ten),(Nine, Eight, Seven, Ten, Jack),(Nine, Seven, Jack, Ten, Eight),(Nine, Seven, Jack, Eight, Ten),(Nine, Seven, Ten, Jack, Eight),(Nine, Seven, Ten, Eight, Jack),(Nine, Seven, Eight, Jack, Ten),(Nine, Seven, Eight, Ten, Jack),(Eight, Jack, Ten, Nine, Seven),(Eight, Jack, Ten, Seven, Nine),(Eight, Jack, Nine, Ten, Seven),(Eight, Jack, Nine, Seven, Ten),(Eight, Jack, Seven, Ten, Nine),(Eight, Jack, Seven, Nine, Ten),(Eight, Ten, Jack, Nine, Seven),(Eight, Ten, Jack, Seven, Nine),(Eight, Ten, Nine, Jack, Seven),(Eight, Ten, Nine, Seven, Jack),(Eight, Ten, Seven, Jack, Nine),(Eight, Ten, Seven, Nine, Jack),(Eight, Nine, Jack, Ten, Seven),(Eight, Nine, Jack, Seven, Ten),(Eight, Nine, Ten, Jack, Seven),(Eight, Nine, Ten, Seven, Jack),(Eight, Nine, Seven, Jack, Ten),(Eight, Nine, Seven, Ten, Jack),(Eight, Seven, Jack, Ten, Nine),(Eight, Seven, Jack, Nine, Ten),(Eight, Seven, Ten, Jack, Nine),(Eight, Seven, Ten, Nine, Jack),(Eight, Seven, Nine, Jack, Ten),(Eight, Seven, Nine, Ten, Jack),(Seven, Jack, Ten, Nine, Eight),(Seven, Jack, Ten, Eight, Nine),(Seven, Jack, Nine, Ten, Eight),(Seven, Jack, Nine, Eight, Ten),(Seven, Jack, Eight, Ten, Nine),(Seven, Jack, Eight, Nine, Ten),(Seven, Ten, Jack, Nine, Eight),(Seven, Ten, Jack, Eight, Nine),(Seven, Ten, Nine, Jack, Eight),(Seven, Ten, Nine, Eight, Jack),(Seven, Ten, Eight, Jack, Nine),(Seven, Ten, Eight, Nine, Jack),(Seven, Nine, Jack, Ten, Eight),(Seven, Nine, Jack, Eight, Ten),(Seven, Nine, Ten, Jack, Eight),(Seven, Nine, Ten, Eight, Jack),(Seven, Nine, Eight, Jack, Ten),(Seven, Nine, Eight, Ten, Jack),(Seven, Eight, Jack, Ten, Nine),(Seven, Eight, Jack, Nine, Ten),(Seven, Eight, Ten, Jack, Nine),(Seven, Eight, Ten, Nine, Jack),(Seven, Eight, Nine, Jack, Ten),(Seven, Eight, Nine, Ten, Jack),(Ten, Nine, Eight, Seven, Six),(Ten, Nine, Eight, Six, Seven),(Ten, Nine, Seven, Eight, Six),(Ten, Nine, Seven, Six, Eight),(Ten, Nine, Six, Eight, Seven),(Ten, Nine, Six, Seven, Eight),(Ten, Eight, Nine, Seven, Six),(Ten, Eight, Nine, Six, Seven),(Ten, Eight, Seven, Nine, Six),(Ten, Eight, Seven, Six, Nine),(Ten, Eight, Six, Nine, Seven),(Ten, Eight, Six, Seven, Nine),(Ten, Seven, Nine, Eight, Six),(Ten, Seven, Nine, Six, Eight),(Ten, Seven, Eight, Nine, Six),(Ten, Seven, Eight, Six, Nine),(Ten, Seven, Six, Nine, Eight),(Ten, Seven, Six, Eight, Nine),(Ten, Six, Nine, Eight, Seven),(Ten, Six, Nine, Seven, Eight),(Ten, Six, Eight, Nine, Seven),(Ten, Six, Eight, Seven, Nine),(Ten, Six, Seven, Nine, Eight),(Ten, Six, Seven, Eight, Nine),(Nine, Ten, Eight, Seven, Six),(Nine, Ten, Eight, Six, Seven),(Nine, Ten, Seven, Eight, Six),(Nine, Ten, Seven, Six, Eight),(Nine, Ten, Six, Eight, Seven),(Nine, Ten, Six, Seven, Eight),(Nine, Eight, Ten, Seven, Six),(Nine, Eight, Ten, Six, Seven),(Nine, Eight, Seven, Ten, Six),(Nine, Eight, Seven, Six, Ten),(Nine, Eight, Six, Ten, Seven),(Nine, Eight, Six, Seven, Ten),(Nine, Seven, Ten, Eight, Six),(Nine, Seven, Ten, Six, Eight),(Nine, Seven, Eight, Ten, Six),(Nine, Seven, Eight, Six, Ten),(Nine, Seven, Six, Ten, Eight),(Nine, Seven, Six, Eight, Ten),(Nine, Six, Ten, Eight, Seven),(Nine, Six, Ten, Seven, Eight),(Nine, Six, Eight, Ten, Seven),(Nine, Six, Eight, Seven, Ten),(Nine, Six, Seven, Ten, Eight),(Nine, Six, Seven, Eight, Ten),(Eight, Ten, Nine, Seven, Six),(Eight, Ten, Nine, Six, Seven),(Eight, Ten, Seven, Nine, Six),(Eight, Ten, Seven, Six, Nine),(Eight, Ten, Six, Nine, Seven),(Eight, Ten, Six, Seven, Nine),(Eight, Nine, Ten, Seven, Six),(Eight, Nine, Ten, Six, Seven),(Eight, Nine, Seven, Ten, Six),(Eight, Nine, Seven, Six, Ten),(Eight, Nine, Six, Ten, Seven),(Eight, Nine, Six, Seven, Ten),(Eight, Seven, Ten, Nine, Six),(Eight, Seven, Ten, Six, Nine),(Eight, Seven, Nine, Ten, Six),(Eight, Seven, Nine, Six, Ten),(Eight, Seven, Six, Ten, Nine),(Eight, Seven, Six, Nine, Ten),(Eight, Six, Ten, Nine, Seven),(Eight, Six, Ten, Seven, Nine),(Eight, Six, Nine, Ten, Seven),(Eight, Six, Nine, Seven, Ten),(Eight, Six, Seven, Ten, Nine),(Eight, Six, Seven, Nine, Ten),(Seven, Ten, Nine, Eight, Six),(Seven, Ten, Nine, Six, Eight),(Seven, Ten, Eight, Nine, Six),(Seven, Ten, Eight, Six, Nine),(Seven, Ten, Six, Nine, Eight),(Seven, Ten, Six, Eight, Nine),(Seven, Nine, Ten, Eight, Six),(Seven, Nine, Ten, Six, Eight),(Seven, Nine, Eight, Ten, Six),(Seven, Nine, Eight, Six, Ten),(Seven, Nine, Six, Ten, Eight),(Seven, Nine, Six, Eight, Ten),(Seven, Eight, Ten, Nine, Six),(Seven, Eight, Ten, Six, Nine),(Seven, Eight, Nine, Ten, Six),(Seven, Eight, Nine, Six, Ten),(Seven, Eight, Six, Ten, Nine),(Seven, Eight, Six, Nine, Ten),(Seven, Six, Ten, Nine, Eight),(Seven, Six, Ten, Eight, Nine),(Seven, Six, Nine, Ten, Eight),(Seven, Six, Nine, Eight, Ten),(Seven, Six, Eight, Ten, Nine),(Seven, Six, Eight, Nine, Ten),(Six, Ten, Nine, Eight, Seven),(Six, Ten, Nine, Seven, Eight),(Six, Ten, Eight, Nine, Seven),(Six, Ten, Eight, Seven, Nine),(Six, Ten, Seven, Nine, Eight),(Six, Ten, Seven, Eight, Nine),(Six, Nine, Ten, Eight, Seven),(Six, Nine, Ten, Seven, Eight),(Six, Nine, Eight, Ten, Seven),(Six, Nine, Eight, Seven, Ten),(Six, Nine, Seven, Ten, Eight),(Six, Nine, Seven, Eight, Ten),(Six, Eight, Ten, Nine, Seven),(Six, Eight, Ten, Seven, Nine),(Six, Eight, Nine, Ten, Seven),(Six, Eight, Nine, Seven, Ten),(Six, Eight, Seven, Ten, Nine),(Six, Eight, Seven, Nine, Ten),(Six, Seven, Ten, Nine, Eight),(Six, Seven, Ten, Eight, Nine),(Six, Seven, Nine, Ten, Eight),(Six, Seven, Nine, Eight, Ten),(Six, Seven, Eight, Ten, Nine),(Six, Seven, Eight, Nine, Ten),(Nine, Eight, Seven, Six, Five),(Nine, Eight, Seven, Five, Six),(Nine, Eight, Six, Seven, Five),(Nine, Eight, Six, Five, Seven),(Nine, Eight, Five, Seven, Six),(Nine, Eight, Five, Six, Seven),(Nine, Seven, Eight, Six, Five),(Nine, Seven, Eight, Five, Six),(Nine, Seven, Six, Eight, Five),(Nine, Seven, Six, Five, Eight),(Nine, Seven, Five, Eight, Six),(Nine, Seven, Five, Six, Eight),(Nine, Six, Eight, Seven, Five),(Nine, Six, Eight, Five, Seven),(Nine, Six, Seven, Eight, Five),(Nine, Six, Seven, Five, Eight),(Nine, Six, Five, Eight, Seven),(Nine, Six, Five, Seven, Eight),(Nine, Five, Eight, Seven, Six),(Nine, Five, Eight, Six, Seven),(Nine, Five, Seven, Eight, Six),(Nine, Five, Seven, Six, Eight),(Nine, Five, Six, Eight, Seven),(Nine, Five, Six, Seven, Eight),(Eight, Nine, Seven, Six, Five),(Eight, Nine, Seven, Five, Six),(Eight, Nine, Six, Seven, Five),(Eight, Nine, Six, Five, Seven),(Eight, Nine, Five, Seven, Six),(Eight, Nine, Five, Six, Seven),(Eight, Seven, Nine, Six, Five),(Eight, Seven, Nine, Five, Six),(Eight, Seven, Six, Nine, Five),(Eight, Seven, Six, Five, Nine),(Eight, Seven, Five, Nine, Six),(Eight, Seven, Five, Six, Nine),(Eight, Six, Nine, Seven, Five),(Eight, Six, Nine, Five, Seven),(Eight, Six, Seven, Nine, Five),(Eight, Six, Seven, Five, Nine),(Eight, Six, Five, Nine, Seven),(Eight, Six, Five, Seven, Nine),(Eight, Five, Nine, Seven, Six),(Eight, Five, Nine, Six, Seven),(Eight, Five, Seven, Nine, Six),(Eight, Five, Seven, Six, Nine),(Eight, Five, Six, Nine, Seven),(Eight, Five, Six, Seven, Nine),(Seven, Nine, Eight, Six, Five),(Seven, Nine, Eight, Five, Six),(Seven, Nine, Six, Eight, Five),(Seven, Nine, Six, Five, Eight),(Seven, Nine, Five, Eight, Six),(Seven, Nine, Five, Six, Eight),(Seven, Eight, Nine, Six, Five),(Seven, Eight, Nine, Five, Six),(Seven, Eight, Six, Nine, Five),(Seven, Eight, Six, Five, Nine),(Seven, Eight, Five, Nine, Six),(Seven, Eight, Five, Six, Nine),(Seven, Six, Nine, Eight, Five),(Seven, Six, Nine, Five, Eight),(Seven, Six, Eight, Nine, Five),(Seven, Six, Eight, Five, Nine),(Seven, Six, Five, Nine, Eight),(Seven, Six, Five, Eight, Nine),(Seven, Five, Nine, Eight, Six),(Seven, Five, Nine, Six, Eight),(Seven, Five, Eight, Nine, Six),(Seven, Five, Eight, Six, Nine),(Seven, Five, Six, Nine, Eight),(Seven, Five, Six, Eight, Nine),(Six, Nine, Eight, Seven, Five),(Six, Nine, Eight, Five, Seven),(Six, Nine, Seven, Eight, Five),(Six, Nine, Seven, Five, Eight),(Six, Nine, Five, Eight, Seven),(Six, Nine, Five, Seven, Eight),(Six, Eight, Nine, Seven, Five),(Six, Eight, Nine, Five, Seven),(Six, Eight, Seven, Nine, Five),(Six, Eight, Seven, Five, Nine),(Six, Eight, Five, Nine, Seven),(Six, Eight, Five, Seven, Nine),(Six, Seven, Nine, Eight, Five),(Six, Seven, Nine, Five, Eight),(Six, Seven, Eight, Nine, Five),(Six, Seven, Eight, Five, Nine),(Six, Seven, Five, Nine, Eight),(Six, Seven, Five, Eight, Nine),(Six, Five, Nine, Eight, Seven),(Six, Five, Nine, Seven, Eight),(Six, Five, Eight, Nine, Seven),(Six, Five, Eight, Seven, Nine),(Six, Five, Seven, Nine, Eight),(Six, Five, Seven, Eight, Nine),(Five, Nine, Eight, Seven, Six),(Five, Nine, Eight, Six, Seven),(Five, Nine, Seven, Eight, Six),(Five, Nine, Seven, Six, Eight),(Five, Nine, Six, Eight, Seven),(Five, Nine, Six, Seven, Eight),(Five, Eight, Nine, Seven, Six),(Five, Eight, Nine, Six, Seven),(Five, Eight, Seven, Nine, Six),(Five, Eight, Seven, Six, Nine),(Five, Eight, Six, Nine, Seven),(Five, Eight, Six, Seven, Nine),(Five, Seven, Nine, Eight, Six),(Five, Seven, Nine, Six, Eight),(Five, Seven, Eight, Nine, Six),(Five, Seven, Eight, Six, Nine),(Five, Seven, Six, Nine, Eight),(Five, Seven, Six, Eight, Nine),(Five, Six, Nine, Eight, Seven),(Five, Six, Nine, Seven, Eight),(Five, Six, Eight, Nine, Seven),(Five, Six, Eight, Seven, Nine),(Five, Six, Seven, Nine, Eight),(Five, Six, Seven, Eight, Nine),(Eight, Seven, Six, Five, Four),(Eight, Seven, Six, Four, Five),(Eight, Seven, Five, Six, Four),(Eight, Seven, Five, Four, Six),(Eight, Seven, Four, Six, Five),(Eight, Seven, Four, Five, Six),(Eight, Six, Seven, Five, Four),(Eight, Six, Seven, Four, Five),(Eight, Six, Five, Seven, Four),(Eight, Six, Five, Four, Seven),(Eight, Six, Four, Seven, Five),(Eight, Six, Four, Five, Seven),(Eight, Five, Seven, Six, Four),(Eight, Five, Seven, Four, Six),(Eight, Five, Six, Seven, Four),(Eight, Five, Six, Four, Seven),(Eight, Five, Four, Seven, Six),(Eight, Five, Four, Six, Seven),(Eight, Four, Seven, Six, Five),(Eight, Four, Seven, Five, Six),(Eight, Four, Six, Seven, Five),(Eight, Four, Six, Five, Seven),(Eight, Four, Five, Seven, Six),(Eight, Four, Five, Six, Seven),(Seven, Eight, Six, Five, Four),(Seven, Eight, Six, Four, Five),(Seven, Eight, Five, Six, Four),(Seven, Eight, Five, Four, Six),(Seven, Eight, Four, Six, Five),(Seven, Eight, Four, Five, Six),(Seven, Six, Eight, Five, Four),(Seven, Six, Eight, Four, Five),(Seven, Six, Five, Eight, Four),(Seven, Six, Five, Four, Eight),(Seven, Six, Four, Eight, Five),(Seven, Six, Four, Five, Eight),(Seven, Five, Eight, Six, Four),(Seven, Five, Eight, Four, Six),(Seven, Five, Six, Eight, Four),(Seven, Five, Six, Four, Eight),(Seven, Five, Four, Eight, Six),(Seven, Five, Four, Six, Eight),(Seven, Four, Eight, Six, Five),(Seven, Four, Eight, Five, Six),(Seven, Four, Six, Eight, Five),(Seven, Four, Six, Five, Eight),(Seven, Four, Five, Eight, Six),(Seven, Four, Five, Six, Eight),(Six, Eight, Seven, Five, Four),(Six, Eight, Seven, Four, Five),(Six, Eight, Five, Seven, Four),(Six, Eight, Five, Four, Seven),(Six, Eight, Four, Seven, Five),(Six, Eight, Four, Five, Seven),(Six, Seven, Eight, Five, Four),(Six, Seven, Eight, Four, Five),(Six, Seven, Five, Eight, Four),(Six, Seven, Five, Four, Eight),(Six, Seven, Four, Eight, Five),(Six, Seven, Four, Five, Eight),(Six, Five, Eight, Seven, Four),(Six, Five, Eight, Four, Seven),(Six, Five, Seven, Eight, Four),(Six, Five, Seven, Four, Eight),(Six, Five, Four, Eight, Seven),(Six, Five, Four, Seven, Eight),(Six, Four, Eight, Seven, Five),(Six, Four, Eight, Five, Seven),(Six, Four, Seven, Eight, Five),(Six, Four, Seven, Five, Eight),(Six, Four, Five, Eight, Seven),(Six, Four, Five, Seven, Eight),(Five, Eight, Seven, Six, Four),(Five, Eight, Seven, Four, Six),(Five, Eight, Six, Seven, Four),(Five, Eight, Six, Four, Seven),(Five, Eight, Four, Seven, Six),(Five, Eight, Four, Six, Seven),(Five, Seven, Eight, Six, Four),(Five, Seven, Eight, Four, Six),(Five, Seven, Six, Eight, Four),(Five, Seven, Six, Four, Eight),(Five, Seven, Four, Eight, Six),(Five, Seven, Four, Six, Eight),(Five, Six, Eight, Seven, Four),(Five, Six, Eight, Four, Seven),(Five, Six, Seven, Eight, Four),(Five, Six, Seven, Four, Eight),(Five, Six, Four, Eight, Seven),(Five, Six, Four, Seven, Eight),(Five, Four, Eight, Seven, Six),(Five, Four, Eight, Six, Seven),(Five, Four, Seven, Eight, Six),(Five, Four, Seven, Six, Eight),(Five, Four, Six, Eight, Seven),(Five, Four, Six, Seven, Eight),(Four, Eight, Seven, Six, Five),(Four, Eight, Seven, Five, Six),(Four, Eight, Six, Seven, Five),(Four, Eight, Six, Five, Seven),(Four, Eight, Five, Seven, Six),(Four, Eight, Five, Six, Seven),(Four, Seven, Eight, Six, Five),(Four, Seven, Eight, Five, Six),(Four, Seven, Six, Eight, Five),(Four, Seven, Six, Five, Eight),(Four, Seven, Five, Eight, Six),(Four, Seven, Five, Six, Eight),(Four, Six, Eight, Seven, Five),(Four, Six, Eight, Five, Seven),(Four, Six, Seven, Eight, Five),(Four, Six, Seven, Five, Eight),(Four, Six, Five, Eight, Seven),(Four, Six, Five, Seven, Eight),(Four, Five, Eight, Seven, Six),(Four, Five, Eight, Six, Seven),(Four, Five, Seven, Eight, Six),(Four, Five, Seven, Six, Eight),(Four, Five, Six, Eight, Seven),(Four, Five, Six, Seven, Eight),(Seven, Six, Five, Four, Three),(Seven, Six, Five, Three, Four),(Seven, Six, Four, Five, Three),(Seven, Six, Four, Three, Five),(Seven, Six, Three, Five, Four),(Seven, Six, Three, Four, Five),(Seven, Five, Six, Four, Three),(Seven, Five, Six, Three, Four),(Seven, Five, Four, Six, Three),(Seven, Five, Four, Three, Six),(Seven, Five, Three, Six, Four),(Seven, Five, Three, Four, Six),(Seven, Four, Six, Five, Three),(Seven, Four, Six, Three, Five),(Seven, Four, Five, Six, Three),(Seven, Four, Five, Three, Six),(Seven, Four, Three, Six, Five),(Seven, Four, Three, Five, Six),(Seven, Three, Six, Five, Four),(Seven, Three, Six, Four, Five),(Seven, Three, Five, Six, Four),(Seven, Three, Five, Four, Six),(Seven, Three, Four, Six, Five),(Seven, Three, Four, Five, Six),(Six, Seven, Five, Four, Three),(Six, Seven, Five, Three, Four),(Six, Seven, Four, Five, Three),(Six, Seven, Four, Three, Five),(Six, Seven, Three, Five, Four),(Six, Seven, Three, Four, Five),(Six, Five, Seven, Four, Three),(Six, Five, Seven, Three, Four),(Six, Five, Four, Seven, Three),(Six, Five, Four, Three, Seven),(Six, Five, Three, Seven, Four),(Six, Five, Three, Four, Seven),(Six, Four, Seven, Five, Three),(Six, Four, Seven, Three, Five),(Six, Four, Five, Seven, Three),(Six, Four, Five, Three, Seven),(Six, Four, Three, Seven, Five),(Six, Four, Three, Five, Seven),(Six, Three, Seven, Five, Four),(Six, Three, Seven, Four, Five),(Six, Three, Five, Seven, Four),(Six, Three, Five, Four, Seven),(Six, Three, Four, Seven, Five),(Six, Three, Four, Five, Seven),(Five, Seven, Six, Four, Three),(Five, Seven, Six, Three, Four),(Five, Seven, Four, Six, Three),(Five, Seven, Four, Three, Six),(Five, Seven, Three, Six, Four),(Five, Seven, Three, Four, Six),(Five, Six, Seven, Four, Three),(Five, Six, Seven, Three, Four),(Five, Six, Four, Seven, Three),(Five, Six, Four, Three, Seven),(Five, Six, Three, Seven, Four),(Five, Six, Three, Four, Seven),(Five, Four, Seven, Six, Three),(Five, Four, Seven, Three, Six),(Five, Four, Six, Seven, Three),(Five, Four, Six, Three, Seven),(Five, Four, Three, Seven, Six),(Five, Four, Three, Six, Seven),(Five, Three, Seven, Six, Four),(Five, Three, Seven, Four, Six),(Five, Three, Six, Seven, Four),(Five, Three, Six, Four, Seven),(Five, Three, Four, Seven, Six),(Five, Three, Four, Six, Seven),(Four, Seven, Six, Five, Three),(Four, Seven, Six, Three, Five),(Four, Seven, Five, Six, Three),(Four, Seven, Five, Three, Six),(Four, Seven, Three, Six, Five),(Four, Seven, Three, Five, Six),(Four, Six, Seven, Five, Three),(Four, Six, Seven, Three, Five),(Four, Six, Five, Seven, Three),(Four, Six, Five, Three, Seven),(Four, Six, Three, Seven, Five),(Four, Six, Three, Five, Seven),(Four, Five, Seven, Six, Three),(Four, Five, Seven, Three, Six),(Four, Five, Six, Seven, Three),(Four, Five, Six, Three, Seven),(Four, Five, Three, Seven, Six),(Four, Five, Three, Six, Seven),(Four, Three, Seven, Six, Five),(Four, Three, Seven, Five, Six),(Four, Three, Six, Seven, Five),(Four, Three, Six, Five, Seven),(Four, Three, Five, Seven, Six),(Four, Three, Five, Six, Seven),(Three, Seven, Six, Five, Four),(Three, Seven, Six, Four, Five),(Three, Seven, Five, Six, Four),(Three, Seven, Five, Four, Six),(Three, Seven, Four, Six, Five),(Three, Seven, Four, Five, Six),(Three, Six, Seven, Five, Four),(Three, Six, Seven, Four, Five),(Three, Six, Five, Seven, Four),(Three, Six, Five, Four, Seven),(Three, Six, Four, Seven, Five),(Three, Six, Four, Five, Seven),(Three, Five, Seven, Six, Four),(Three, Five, Seven, Four, Six),(Three, Five, Six, Seven, Four),(Three, Five, Six, Four, Seven),(Three, Five, Four, Seven, Six),(Three, Five, Four, Six, Seven),(Three, Four, Seven, Six, Five),(Three, Four, Seven, Five, Six),(Three, Four, Six, Seven, Five),(Three, Four, Six, Five, Seven),(Three, Four, Five, Seven, Six),(Three, Four, Five, Six, Seven),(Six, Five, Four, Three, Two),(Six, Five, Four, Two, Three),(Six, Five, Three, Four, Two),(Six, Five, Three, Two, Four),(Six, Five, Two, Four, Three),(Six, Five, Two, Three, Four),(Six, Four, Five, Three, Two),(Six, Four, Five, Two, Three),(Six, Four, Three, Five, Two),(Six, Four, Three, Two, Five),(Six, Four, Two, Five, Three),(Six, Four, Two, Three, Five),(Six, Three, Five, Four, Two),(Six, Three, Five, Two, Four),(Six, Three, Four, Five, Two),(Six, Three, Four, Two, Five),(Six, Three, Two, Five, Four),(Six, Three, Two, Four, Five),(Six, Two, Five, Four, Three),(Six, Two, Five, Three, Four),(Six, Two, Four, Five, Three),(Six, Two, Four, Three, Five),(Six, Two, Three, Five, Four),(Six, Two, Three, Four, Five),(Five, Six, Four, Three, Two),(Five, Six, Four, Two, Three),(Five, Six, Three, Four, Two),(Five, Six, Three, Two, Four),(Five, Six, Two, Four, Three),(Five, Six, Two, Three, Four),(Five, Four, Six, Three, Two),(Five, Four, Six, Two, Three),(Five, Four, Three, Six, Two),(Five, Four, Three, Two, Six),(Five, Four, Two, Six, Three),(Five, Four, Two, Three, Six),(Five, Three, Six, Four, Two),(Five, Three, Six, Two, Four),(Five, Three, Four, Six, Two),(Five, Three, Four, Two, Six),(Five, Three, Two, Six, Four),(Five, Three, Two, Four, Six),(Five, Two, Six, Four, Three),(Five, Two, Six, Three, Four),(Five, Two, Four, Six, Three),(Five, Two, Four, Three, Six),(Five, Two, Three, Six, Four),(Five, Two, Three, Four, Six),(Four, Six, Five, Three, Two),(Four, Six, Five, Two, Three),(Four, Six, Three, Five, Two),(Four, Six, Three, Two, Five),(Four, Six, Two, Five, Three),(Four, Six, Two, Three, Five),(Four, Five, Six, Three, Two),(Four, Five, Six, Two, Three),(Four, Five, Three, Six, Two),(Four, Five, Three, Two, Six),(Four, Five, Two, Six, Three),(Four, Five, Two, Three, Six),(Four, Three, Six, Five, Two),(Four, Three, Six, Two, Five),(Four, Three, Five, Six, Two),(Four, Three, Five, Two, Six),(Four, Three, Two, Six, Five),(Four, Three, Two, Five, Six),(Four, Two, Six, Five, Three),(Four, Two, Six, Three, Five),(Four, Two, Five, Six, Three),(Four, Two, Five, Three, Six),(Four, Two, Three, Six, Five),(Four, Two, Three, Five, Six),(Three, Six, Five, Four, Two),(Three, Six, Five, Two, Four),(Three, Six, Four, Five, Two),(Three, Six, Four, Two, Five),(Three, Six, Two, Five, Four),(Three, Six, Two, Four, Five),(Three, Five, Six, Four, Two),(Three, Five, Six, Two, Four),(Three, Five, Four, Six, Two),(Three, Five, Four, Two, Six),(Three, Five, Two, Six, Four),(Three, Five, Two, Four, Six),(Three, Four, Six, Five, Two),(Three, Four, Six, Two, Five),(Three, Four, Five, Six, Two),(Three, Four, Five, Two, Six),(Three, Four, Two, Six, Five),(Three, Four, Two, Five, Six),(Three, Two, Six, Five, Four),(Three, Two, Six, Four, Five),(Three, Two, Five, Six, Four),(Three, Two, Five, Four, Six),(Three, Two, Four, Six, Five),(Three, Two, Four, Five, Six),(Two, Six, Five, Four, Three),(Two, Six, Five, Three, Four),(Two, Six, Four, Five, Three),(Two, Six, Four, Three, Five),(Two, Six, Three, Five, Four),(Two, Six, Three, Four, Five),(Two, Five, Six, Four, Three),(Two, Five, Six, Three, Four),(Two, Five, Four, Six, Three),(Two, Five, Four, Three, Six),(Two, Five, Three, Six, Four),(Two, Five, Three, Four, Six),(Two, Four, Six, Five, Three),(Two, Four, Six, Three, Five),(Two, Four, Five, Six, Three),(Two, Four, Five, Three, Six),(Two, Four, Three, Six, Five),(Two, Four, Three, Five, Six),(Two, Three, Six, Five, Four),(Two, Three, Six, Four, Five),(Two, Three, Five, Six, Four),(Two, Three, Five, Four, Six),(Two, Three, Four, Six, Five),(Two, Three, Four, Five, Six),(Five, Four, Three, Two, Ace),(Five, Four, Three, Ace, Two),(Five, Four, Two, Three, Ace),(Five, Four, Two, Ace, Three),(Five, Four, Ace, Three, Two),(Five, Four, Ace, Two, Three),(Five, Three, Four, Two, Ace),(Five, Three, Four, Ace, Two),(Five, Three, Two, Four, Ace),(Five, Three, Two, Ace, Four),(Five, Three, Ace, Four, Two),(Five, Three, Ace, Two, Four),(Five, Two, Four, Three, Ace),(Five, Two, Four, Ace, Three),(Five, Two, Three, Four, Ace),(Five, Two, Three, Ace, Four),(Five, Two, Ace, Four, Three),(Five, Two, Ace, Three, Four),(Five, Ace, Four, Three, Two),(Five, Ace, Four, Two, Three),(Five, Ace, Three, Four, Two),(Five, Ace, Three, Two, Four),(Five, Ace, Two, Four, Three),(Five, Ace, Two, Three, Four),(Four, Five, Three, Two, Ace),(Four, Five, Three, Ace, Two),(Four, Five, Two, Three, Ace),(Four, Five, Two, Ace, Three),(Four, Five, Ace, Three, Two),(Four, Five, Ace, Two, Three),(Four, Three, Five, Two, Ace),(Four, Three, Five, Ace, Two),(Four, Three, Two, Five, Ace),(Four, Three, Two, Ace, Five),(Four, Three, Ace, Five, Two),(Four, Three, Ace, Two, Five),(Four, Two, Five, Three, Ace),(Four, Two, Five, Ace, Three),(Four, Two, Three, Five, Ace),(Four, Two, Three, Ace, Five),(Four, Two, Ace, Five, Three),(Four, Two, Ace, Three, Five),(Four, Ace, Five, Three, Two),(Four, Ace, Five, Two, Three),(Four, Ace, Three, Five, Two),(Four, Ace, Three, Two, Five),(Four, Ace, Two, Five, Three),(Four, Ace, Two, Three, Five),(Three, Five, Four, Two, Ace),(Three, Five, Four, Ace, Two),(Three, Five, Two, Four, Ace),(Three, Five, Two, Ace, Four),(Three, Five, Ace, Four, Two),(Three, Five, Ace, Two, Four),(Three, Four, Five, Two, Ace),(Three, Four, Five, Ace, Two),(Three, Four, Two, Five, Ace),(Three, Four, Two, Ace, Five),(Three, Four, Ace, Five, Two),(Three, Four, Ace, Two, Five),(Three, Two, Five, Four, Ace),(Three, Two, Five, Ace, Four),(Three, Two, Four, Five, Ace),(Three, Two, Four, Ace, Five),(Three, Two, Ace, Five, Four),(Three, Two, Ace, Four, Five),(Three, Ace, Five, Four, Two),(Three, Ace, Five, Two, Four),(Three, Ace, Four, Five, Two),(Three, Ace, Four, Two, Five),(Three, Ace, Two, Five, Four),(Three, Ace, Two, Four, Five),(Two, Five, Four, Three, Ace),(Two, Five, Four, Ace, Three),(Two, Five, Three, Four, Ace),(Two, Five, Three, Ace, Four),(Two, Five, Ace, Four, Three),(Two, Five, Ace, Three, Four),(Two, Four, Five, Three, Ace),(Two, Four, Five, Ace, Three),(Two, Four, Three, Five, Ace),(Two, Four, Three, Ace, Five),(Two, Four, Ace, Five, Three),(Two, Four, Ace, Three, Five),(Two, Three, Five, Four, Ace),(Two, Three, Five, Ace, Four),(Two, Three, Four, Five, Ace),(Two, Three, Four, Ace, Five),(Two, Three, Ace, Five, Four),(Two, Three, Ace, Four, Five),(Two, Ace, Five, Four, Three),(Two, Ace, Five, Three, Four),(Two, Ace, Four, Five, Three),(Two, Ace, Four, Three, Five),(Two, Ace, Three, Five, Four),(Two, Ace, Three, Four, Five),(Ace, Five, Four, Three, Two),(Ace, Five, Four, Two, Three),(Ace, Five, Three, Four, Two),(Ace, Five, Three, Two, Four),(Ace, Five, Two, Four, Three),(Ace, Five, Two, Three, Four),(Ace, Four, Five, Three, Two),(Ace, Four, Five, Two, Three),(Ace, Four, Three, Five, Two),(Ace, Four, Three, Two, Five),(Ace, Four, Two, Five, Three),(Ace, Four, Two, Three, Five),(Ace, Three, Five, Four, Two),(Ace, Three, Five, Two, Four),(Ace, Three, Four, Five, Two),(Ace, Three, Four, Two, Five),(Ace, Three, Two, Five, Four),(Ace, Three, Two, Four, Five),(Ace, Two, Five, Four, Three),(Ace, Two, Five, Three, Four),(Ace, Two, Four, Five, Three),(Ace, Two, Four, Three, Five),(Ace, Two, Three, Five, Four),(Ace, Two, Three, Four, Five)] ))

isThreeOfAKind :: (Card,Card,Card,Card,Card) -> Bool
isThreeOfAKind (c1,c2,c3,c4,c5) =
  ((c1 /= c2)&&(c1 /= c3)&&(c1 /= c4)&&(c1 /= c5)&&(c2 /= c3)&&(c2 /= c4)&&(c2 /= c5)&&(c3 /= c4)&&(c3 /= c5)&&(c4 /= c5) ) &&
  ((rank c1)==(rank c2)&&(rank c1)==(rank c3)
    ||(rank c1)==(rank c2)&&(rank c1)==(rank c4)
    ||(rank c1)==(rank c2)&&(rank c1)==(rank c5)
    ||(rank c1)==(rank c3)&&(rank c1)==(rank c4)
    ||(rank c1)==(rank c3)&&(rank c1)==(rank c5)
    ||(rank c1)==(rank c4)&&(rank c1)==(rank c5)
    ||(rank c2)==(rank c3)&&(rank c2)==(rank c4)
    ||(rank c2)==(rank c3)&&(rank c2)==(rank c5)
    ||(rank c2)==(rank c4)&&(rank c2)==(rank c5)
    ||(rank c3)==(rank c4)&&(rank c4)==(rank c5))

isTwoPair :: (Card,Card,Card,Card,Card) -> Bool
isTwoPair (c1,c2,c3,c4,c5) =
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5) &&
  ((rank c1)==(rank c2)&& (rank c3)==(rank c4)
    ||(rank c1)==(rank c2)&& (rank c3)==(rank c5)
    ||(rank c1)==(rank c2)&& (rank c4)==(rank c5)
    ||(rank c1)==(rank c3)&& (rank c2)==(rank c4)
    ||(rank c1)==(rank c3)&& (rank c2)==(rank c5)
    ||(rank c1)==(rank c3)&& (rank c4)==(rank c5)
    ||(rank c1)==(rank c4)&& (rank c2)==(rank c3)
    ||(rank c1)==(rank c4)&& (rank c2)==(rank c5)
    ||(rank c1)==(rank c4)&& (rank c3)==(rank c5)
    ||(rank c1)==(rank c5)&& (rank c2)==(rank c3)
    ||(rank c1)==(rank c5)&& (rank c2)==(rank c4)
    ||(rank c1)==(rank c5)&& (rank c3)==(rank c4)
    ||(rank c2)==(rank c4)&& (rank c3)==(rank c5)
    ||(rank c2)==(rank c3)&& (rank c4)==(rank c5)
    ||(rank c2)==(rank c5)&& (rank c3)==(rank c4))


getTwoPairH :: (Card,Card,Card,Card,Card) -> Integer
getTwoPairH (c1,c2,c3,c4,c5)
  | (rank c1)==(rank c2)&& (rank c3)==(rank c4)= if getValue c1>getValue c3 then getValue c1 else getValue c3
  | (rank c1)==(rank c2)&& (rank c3)==(rank c5)= if getValue c1>getValue c3 then getValue c1 else getValue c3
  | (rank c1)==(rank c2)&& (rank c4)==(rank c5)= if getValue c1>getValue c4 then getValue c1 else getValue c4
  | (rank c1)==(rank c3)&& (rank c2)==(rank c4)= if getValue c1>getValue c2 then getValue c1 else getValue c2
  | (rank c1)==(rank c3)&& (rank c2)==(rank c5)= if getValue c1>getValue c2 then getValue c1 else getValue c2
  | (rank c1)==(rank c3)&& (rank c4)==(rank c5)= if getValue c1>getValue c4 then getValue c1 else getValue c4
  | (rank c1)==(rank c4)&& (rank c2)==(rank c3)= if getValue c1>getValue c2 then getValue c1 else getValue c2
  | (rank c1)==(rank c4)&& (rank c2)==(rank c5)= if getValue c1>getValue c2 then getValue c1 else getValue c2
  | (rank c1)==(rank c4)&& (rank c3)==(rank c5)= if getValue c1>getValue c3 then getValue c1 else getValue c3
  | (rank c1)==(rank c5)&& (rank c2)==(rank c3)= if getValue c1>getValue c2 then getValue c1 else getValue c2
  | (rank c1)==(rank c5)&& (rank c2)==(rank c4)= if getValue c1>getValue c2 then getValue c1 else getValue c2
  | (rank c1)==(rank c5)&& (rank c3)==(rank c4)= if getValue c1>getValue c3 then getValue c1 else getValue c3
  | (rank c2)==(rank c4)&& (rank c3)==(rank c5)= if getValue c2>getValue c3 then getValue c2 else getValue c3
  | (rank c2)==(rank c3)&& (rank c4)==(rank c5)= if getValue c2>getValue c4 then getValue c2 else getValue c4
  | (rank c2)==(rank c5)&& (rank c3)==(rank c4)= if getValue c2>getValue c3 then getValue c2 else getValue c3
getTwoPairM :: (Card,Card,Card,Card,Card) -> Integer
getTwoPairM (c1,c2,c3,c4,c5)
  | (rank c1)==(rank c2)&& (rank c3)==(rank c4)= if getValue c1>getValue c3 then getValue c3 else getValue c1
  | (rank c1)==(rank c2)&& (rank c3)==(rank c5)= if getValue c1>getValue c3 then getValue c3 else getValue c1
  | (rank c1)==(rank c2)&& (rank c4)==(rank c5)= if getValue c1>getValue c4 then getValue c4 else getValue c1
  | (rank c1)==(rank c3)&& (rank c2)==(rank c4)= if getValue c1>getValue c2 then getValue c2 else getValue c1
  | (rank c1)==(rank c3)&& (rank c2)==(rank c5)= if getValue c1>getValue c2 then getValue c2 else getValue c1
  | (rank c1)==(rank c3)&& (rank c4)==(rank c5)= if getValue c1>getValue c4 then getValue c4 else getValue c1
  | (rank c1)==(rank c4)&& (rank c2)==(rank c3)= if getValue c1>getValue c2 then getValue c2 else getValue c1
  | (rank c1)==(rank c4)&& (rank c2)==(rank c5)= if getValue c1>getValue c2 then getValue c2 else getValue c1
  | (rank c1)==(rank c4)&& (rank c3)==(rank c5)= if getValue c1>getValue c3 then getValue c3 else getValue c1
  | (rank c1)==(rank c5)&& (rank c2)==(rank c3)= if getValue c1>getValue c2 then getValue c2 else getValue c1
  | (rank c1)==(rank c5)&& (rank c2)==(rank c4)= if getValue c1>getValue c2 then getValue c2 else getValue c1
  | (rank c1)==(rank c5)&& (rank c3)==(rank c4)= if getValue c1>getValue c3 then getValue c3 else getValue c1
  | (rank c2)==(rank c4)&& (rank c3)==(rank c5)= if getValue c2>getValue c3 then getValue c3 else getValue c2
  | (rank c2)==(rank c3)&& (rank c4)==(rank c5)= if getValue c2>getValue c4 then getValue c4 else getValue c2
  | (rank c2)==(rank c5)&& (rank c3)==(rank c4)= if getValue c2>getValue c3 then getValue c3 else getValue c2

isOnePair :: (Card,Card,Card,Card,Card) -> Bool
isOnePair (c1,c2,c3,c4,c5) =
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5) &&
  ((rank c1)==(rank c2)||(rank c1)==(rank c3)||
  (rank c1)==(rank c4)||
  (rank c1)==(rank c5)||
  (rank c2)==(rank c3)||
  (rank c2)==(rank c4)||
  (rank c2)==(rank c5)||
  (rank c3)==(rank c4)||
  (rank c3)==(rank c5)||
  (rank c4)==(rank c5))

getOnePair :: (Card,Card,Card,Card,Card) -> Integer
getOnePair (c1,c2,c3,c4,c5)
  | (rank c1)==(rank c2) = getValue c1
  | (rank c1)==(rank c3) = getValue c1
  | (rank c1)==(rank c4) = getValue c1
  | (rank c1)==(rank c5) = getValue c1
  | (rank c2)==(rank c3) = getValue c2
  | (rank c2)==(rank c4) = getValue c2
  | (rank c2)==(rank c5) = getValue c2
  | (rank c3)==(rank c4) = getValue c3
  | (rank c3)==(rank c5) = getValue c3
  | (rank c4)==(rank c5) = getValue c4

isJunk :: (Card,Card,Card,Card,Card) -> Bool
isJunk h1 =
  (c1 /= c2)&&(c1 /= c3)&&(c1/=c4)&&(c1/=c5)&&(c2/=c3)&&(c2/=c4)&&(c2/=c5)&&(c3/=c4)&&(c3/=c5)&&(c4/=c5) &&
  (not ((isRoyalFlush h1)
    ||(isStraightFlush h1)
    ||(isFourOfAKind h1)
    ||(isFullHouse h1)
    ||(isFlush h1)
    ||(isStraight h1)
    ||(isThreeOfAKind h1)
    ||(isTwoPair h1)
    ||(isOnePair h1)))
      where (c1,c2,c3,c4,c5)=h1

junkHighest :: (Card,Card,Card,Card,Card) -> Integer
junkHighest (c1,c2,c3,c4,c5)
  | (getValue c1)>=(getValue c2)&&(getValue c1)>=(getValue c3)&&(getValue c1)>=(getValue c4)&&(getValue c1)>=(getValue c5) = (getValue c1)
  | (getValue c2)>=(getValue c1)&&(getValue c2)>=(getValue c3)&&(getValue c2)>=(getValue c4)&&(getValue c2)>=(getValue c5) = (getValue c2)
  | (getValue c3)>=(getValue c1)&&(getValue c3)>=(getValue c2)&&(getValue c3)>=(getValue c4)&&(getValue c3)>=(getValue c5) = (getValue c3)
  | (getValue c4)>=(getValue c1)&&(getValue c4)>=(getValue c2)&&(getValue c4)>=(getValue c3)&&(getValue c4)>=(getValue c5) = (getValue c4)
  | (getValue c5)>=(getValue c1)&&(getValue c5)>=(getValue c2)&&(getValue c5)>=(getValue c3)&&(getValue c5)>=(getValue c4) = (getValue c5)

sumHand :: (Card,Card,Card,Card,Card)-> Integer
sumHand (c1,c2,c3,c4,c5) = getValue c1+getValue c2+getValue c3+getValue c4+getValue c5

getValue :: Card -> Integer
getValue c = case (rank c) of
   Ace -> 14
   Two -> 2
   Three -> 3
   Four -> 4
   Five -> 5
   Six -> 6
   Seven -> 7
   Eight -> 8
   Nine -> 9
   Ten -> 10
   Jack -> 11
   Queen -> 12
   King -> 13

pokerHandCompare :: (Card,Card,Card,Card,Card) -> (Card,Card,Card,Card,Card) -> Maybe Ordering
pokerHandCompare h1 h2
  | (isRoyalFlush h1)&& (isRoyalFlush h2) = Just EQ
  | (isRoyalFlush h1)&& (isStraightFlush h2) = Just GT
  | (isRoyalFlush h1)&& (isFourOfAKind h2) = Just GT
  | (isRoyalFlush h1)&& (isFullHouse h2) = Just GT
  | (isRoyalFlush h1)&& (isFlush h2) = Just GT
  | (isRoyalFlush h1)&& (isStraight h2) = Just GT
  | (isRoyalFlush h1)&& (isThreeOfAKind h2) = Just GT
  | (isRoyalFlush h1)&& (isTwoPair h2) = Just GT
  | (isRoyalFlush h1)&& (isOnePair h2) = Just GT
  | (isRoyalFlush h1)&& (isJunk h2) = Just GT

  | (isStraightFlush h1)&& (isRoyalFlush h2) = Just LT
  | (isStraightFlush h1)&& (isStraightFlush h2) = if (junkHighest h1)==(junkHighest h2) then Just EQ else (if (junkHighest h1)>(junkHighest h2) then Just GT else Just LT)
  | (isStraightFlush h1)&& (isFourOfAKind h2) = Just GT
  | (isStraightFlush h1)&& (isFullHouse h2) = Just GT
  | (isStraightFlush h1)&& (isFlush h2) = Just GT
  | (isStraightFlush h1)&& (isStraight h2) = Just GT
  | (isStraightFlush h1)&& (isThreeOfAKind h2) = Just GT
  | (isStraightFlush h1)&& (isTwoPair h2) = Just GT
  | (isStraightFlush h1)&& (isOnePair h2) = Just GT
  | (isStraightFlush h1)&& (isJunk h2) = Just GT

  | (isFourOfAKind h1)&& (isRoyalFlush h2) = Just LT
  | (isFourOfAKind h1)&& (isStraightFlush h2) = Just LT
  | (isFourOfAKind h1)&& (isFourOfAKind h2) = if (getFourOfAKind h1)>getFourOfAKind h2 then Just GT else if getFourOfAKind h1==getFourOfAKind h2 then Just EQ else Just LT
  | (isFourOfAKind h1)&& (isFullHouse h2) = Just GT
  | (isFourOfAKind h1)&& (isFlush h2) = Just GT
  | (isFourOfAKind h1)&& (isStraight h2) = Just GT
  | (isFourOfAKind h1)&& (isThreeOfAKind h2) = Just GT
  | (isFourOfAKind h1)&& (isTwoPair h2) = Just GT
  | (isFourOfAKind h1)&& (isOnePair h2) = Just GT
  | (isFourOfAKind h1)&& (isJunk h2) = Just GT

  | (isFullHouse h1)&& (isRoyalFlush h2) = Just LT
  | (isFullHouse h1)&& (isStraightFlush h2) = Just LT
  | (isFullHouse h1)&& (isFourOfAKind h2) = Just LT
  | (isFullHouse h1)&& (isFullHouse h2) = if getFullHouse h1 > getFullHouse h2 then Just GT else (if getFullHouse h1==getFullHouse h2 then (if getFullHousePair h1>getFullHousePair h2 then Just GT else if getFullHousePair h1== getFullHousePair h2 then Just EQ else Just LT) else Just LT)
  | (isFullHouse h1)&& (isFlush h2) = Just GT
  | (isFullHouse h1)&& (isStraight h2) = Just GT
  | (isFullHouse h1)&& (isThreeOfAKind h2) = Just GT
  | (isFullHouse h1)&& (isTwoPair h2) = Just GT
  | (isFullHouse h1)&& (isOnePair h2) = Just GT
  | (isFullHouse h1)&& (isJunk h2) = Just GT

  | (isFlush h1)&& (isRoyalFlush h2) = Just LT
  | (isFlush h1)&& (isStraightFlush h2) = Just LT
  | (isFlush h1)&& (isFourOfAKind h2) = Just LT
  | (isFlush h1)&& (isFullHouse h2) = Just LT
  | (isFlush h1)&& (isFlush h2) = if (junkHighest h1)>(junkHighest h2) then Just GT else if junkHighest h1 < junkHighest h2 then Just LT else if sumHand h1>sumHand h2 then Just GT else if sumHand h1<sumHand h2 then Just LT else Just EQ
  | (isFlush h1)&& (isStraight h2) = Just GT
  | (isFlush h1)&& (isThreeOfAKind h2) = Just GT
  | (isFlush h1)&& (isTwoPair h2) = Just GT
  | (isFlush h1)&& (isOnePair h2) = Just GT
  | (isFlush h1)&& (isJunk h2) = Just GT

  | (isStraight h1)&& (isRoyalFlush h2) = Just LT
  | (isStraight h1)&& (isStraightFlush h2) = Just LT
  | (isStraight h1)&& (isFourOfAKind h2) = Just LT
  | (isStraight h1)&& (isFullHouse h2) = Just LT
  | (isStraight h1)&& (isFlush h2) = Just LT
  | (isStraight h1)&& (isStraight h2) = if (junkHighest h1)==(junkHighest h2) then Just EQ else (if (junkHighest h1)>(junkHighest h2) then Just GT else Just LT)
  | (isStraight h1)&& (isThreeOfAKind h2) = Just GT
  | (isStraight h1)&& (isTwoPair h2) = Just GT
  | (isStraight h1)&& (isOnePair h2) = Just GT
  | (isStraight h1)&& (isJunk h2) = Just GT

  | (isThreeOfAKind h1)&& (isRoyalFlush h2) = Just LT
  | (isThreeOfAKind h1)&& (isStraightFlush h2) = Just LT
  | (isThreeOfAKind h1)&& (isFourOfAKind h2) = Just LT
  | (isThreeOfAKind h1)&& (isFullHouse h2) = Just LT
  | (isThreeOfAKind h1)&& (isFlush h2) = Just LT
  | (isThreeOfAKind h1)&& (isStraight h2) = Just LT
  | (isThreeOfAKind h1)&& (isThreeOfAKind h2) = if getFullHouse h1 > getFullHouse h2 then Just GT else (if getFullHouse h1== getFullHouse h2 then Just EQ else Just LT)
  | (isThreeOfAKind h1)&& (isTwoPair h2) = Just GT
  | (isThreeOfAKind h1)&& (isOnePair h2) = Just GT
  | (isThreeOfAKind h1)&& (isJunk h2) = Just GT

  | (isTwoPair h1)&& (isRoyalFlush h2) = Just LT
  | (isTwoPair h1)&& (isStraightFlush h2) = Just LT
  | (isTwoPair h1)&& (isFourOfAKind h2) = Just LT
  | (isTwoPair h1)&& (isFullHouse h2) = Just LT
  | (isTwoPair h1)&& (isFlush h2) = Just LT
  | (isTwoPair h1)&& (isStraight h2) = Just LT
  | (isTwoPair h1)&& (isThreeOfAKind h2) = Just LT
  | (isTwoPair h1)&& (isTwoPair h2) = if (getTwoPairH h1)==(getTwoPairH h2) then (if (getTwoPairM h1)==(getTwoPairM h2) then Just EQ else (if (getTwoPairM h1)>(getTwoPairM h2) then Just GT else Just LT)) else (if getTwoPairH h1>getTwoPairH h2 then Just GT else Just LT)
  | (isTwoPair h1)&& (isOnePair h2) = Just GT
  | (isTwoPair h1)&& (isJunk h2) = Just GT

  | (isOnePair h1)&& (isRoyalFlush h2) = Just LT
  | (isOnePair h1)&& (isStraightFlush h2) = Just LT
  | (isOnePair h1)&& (isFourOfAKind h2) = Just LT
  | (isOnePair h1)&& (isFullHouse h2) = Just LT
  | (isOnePair h1)&& (isFlush h2) = Just LT
  | (isOnePair h1)&& (isStraight h2) = Just LT
  | (isOnePair h1)&& (isThreeOfAKind h2) = Just LT
  | (isOnePair h1)&& (isTwoPair h2) = Just LT
  | (isOnePair h1)&& (isOnePair h2) = if (getOnePair h1)==(getOnePair h2) then (if (junkHighest h1)==(junkHighest h2) then Just EQ else (if (junkHighest h1)>(junkHighest h2) then Just GT else Just LT)) else (if getOnePair h1>getOnePair h2 then Just GT else Just LT)
  | (isOnePair h1)&& (isJunk h2) = Just GT

  | (isJunk h1) && (isJunk h2) = if (junkHighest h1)==(junkHighest h2) then Just EQ else (if (junkHighest h1)>(junkHighest h2) then Just GT else Just LT)
  | (isJunk h1)&& (isRoyalFlush h2) = Just LT
  | (isJunk h1)&& (isStraightFlush h2) = Just LT
  | (isJunk h1)&& (isFourOfAKind h2) = Just LT
  | (isJunk h1)&& (isFullHouse h2) = Just LT
  | (isJunk h1)&& (isFlush h2) = Just LT
  | (isJunk h1)&& (isStraight h2) = Just LT
  | (isJunk h1)&& (isThreeOfAKind h2) = Just LT
  | (isJunk h1)&& (isTwoPair h2) = Just LT
  | (isJunk h1)&& (isOnePair h2) = Just LT

  | otherwise = Nothing


{- ************************************************************ -}
--ok i dont get the scoring system here. three of a kinds previously had eq ratings to those of the same value but here, it doesnt?
compareTo :: [(Card,Card,Card,Card,Card)] -> [(Card,Card,Card,Card,Card)] -> Maybe Ordering
compareTo [] []         = Just EQ
compareTo _ []          = Just GT
compareTo [] _          = Just LT
compareTo (a:as) (b:bs) = case (pokerHandCompare a b) of
   Just LT -> (compareTo as (b:bs))
   Just GT -> compareTo (a:as) bs
   Just EQ -> compareTo as bs
   Nothing -> Nothing

texasHold'emShowdownCompare :: (Card,Card,Card,Card,Card) -> (Card,Card) -> (Card,Card) -> Maybe Ordering
texasHold'emShowdownCompare (a,b,c,d,e) (f,g) (h,i) =
  compareTo [(a, b, c, d, e), (a, b, c, d, f), (a, b, c, d, g), (a, b, c, e, f), (a, b, c, e, g), (a, b, c, f, g), (a, b, d, e, f), (a, b, d, e, g), (a, b, d, f, g), (a, b, e, f, g), (a, c, d, e, f), (a, c, d, e, g), (a, c, d, f, g), (a, c, e, f, g), (a, d, e, f, g), (b, c, d, e, f), (b, c, d, e, g), (b, c, d, f, g), (b, c, e, f, g), (b, d, e, f, g), (c, d, e, f, g)] [(a, b, c, d, e), (a, b, c, d, h), (a, b, c, d, i), (a, b, c, e, h), (a, b, c, e, i), (a, b, c, h, i), (a, b, d, e, h), (a, b, d, e, i), (a, b, d, h, i), (a, b, e, h, i), (a, c, d, e, h), (a, c, d, e, i), (a, c, d, h, i), (a, c, e, h, i), (a, d, e, h, i), (b, c, d, e, h), (b, c, d, e, i), (b, c, d, h, i), (b, c, e, h, i), (b, d, e, h, i), (c, d, e, h, i)]

{- ************************************************************ -}
{- ************************************************************ -}

{- Cribbage -}

{- ************************************************************ -}
combine :: Card -> (Card,Card,Card,Card)->(Card,Card,Card,Card,Card)
combine c1 (c2,c3,c4,c5) = (c1,c2,c3,c4,c5)

getNewValue :: Card -> Integer
getNewValue c = case (rank c) of
   Ace -> 1
   Two -> 2
   Three -> 3
   Four -> 4
   Five -> 5
   Six -> 6
   Seven -> 7
   Eight -> 8
   Nine -> 9
   Ten -> 10
   Jack -> 10
   Queen -> 10
   King -> 10
make15 :: (Card,Card,Card,Card,Card) -> Integer
make15 (c1,c2,c3,c4,c5)=
  sum [[c1, c2, c3, c4, c5], [c1, c2, c3, c4], [c1, c2, c3, c5], [c1, c2, c4, c5], [c1, c3, c4, c5], [c2, c3, c4, c5], [c1, c2, c3], [c1, c2, c4], [c1, c2, c5], [c1, c3, c4], [c1, c3, c5], [c1, c4, c5], [c2, c3, c4], [c2, c3, c5], [c2, c4, c5], [c3, c4, c5], [c1, c2], [c1, c3], [c1, c4], [c1, c5], [c2, c3], [c2, c4], [c2, c5], [c3, c4], [c3, c5], [c4, c5], [c1], [c2], [c3], [c4], [c5]] 0 where {sumList [] a=0;sumList (x:xs) a=sumList xs a+getNewValue x;sum [] a=a;sum (x:xs) a = if (sumList x a) == 15 then (sum xs a)+1 else sum xs a}

isStraightThree :: (Card,Card,Card) ->Bool
isStraightThree (c1,c2,c3)=(or (map (((rank c1),(rank c2),(rank c3)) == ) [(Ace, Two, Three), (Ace, Three, Two), (Two, Ace, Three), (Two, Three, Ace), (Three, Ace, Two), (Three, Two, Ace), (Two, Three, Four), (Two, Four, Three), (Three, Two, Four), (Three, Four, Two), (Four, Two, Three), (Four, Three, Two), (Three, Four, Five), (Three, Five, Four), (Four, Three, Five), (Four, Five, Three), (Five, Three, Four), (Five, Four, Three), (Four, Five, Six), (Four, Six, Five), (Five, Four, Six), (Five, Six, Four), (Six, Four, Five), (Six, Five, Four), (Five, Six, Seven), (Five, Seven, Six), (Six, Five, Seven), (Six, Seven, Five), (Seven, Five, Six), (Seven, Six, Five), (Six, Seven, Eight), (Six, Eight, Seven), (Seven, Six, Eight), (Seven, Eight, Six), (Eight, Six, Seven), (Eight, Seven, Six), (Seven, Eight, Nine), (Seven, Nine, Eight), (Eight, Seven, Nine), (Eight, Nine, Seven), (Nine, Seven, Eight), (Nine, Eight, Seven), (Eight, Nine, Ten), (Eight, Ten, Nine), (Nine, Eight, Ten), (Nine, Ten, Eight), (Ten, Eight, Nine), (Ten, Nine, Eight), (Nine, Ten, Jack), (Nine, Jack, Ten), (Ten, Nine, Jack), (Ten, Jack, Nine), (Jack, Nine, Ten), (Jack, Ten, Nine), (Ten, Jack, Queen), (Ten, Queen, Jack), (Jack, Ten, Queen), (Jack, Queen, Ten), (Queen, Ten, Jack), (Queen, Jack, Ten), (Jack, Queen, King), (Jack, King, Queen), (Queen, Jack, King), (Queen, King, Jack), (King, Jack, Queen), (King, Queen, Jack), (Queen, King, Ace), (Queen, Ace, King), (King, Queen, Ace), (King, Ace, Queen), (Ace, Queen, King), (Ace, King, Queen)]))

isStraightFour :: (Card,Card,Card,Card) ->Bool
isStraightFour (c1,c2,c3,c4)=(or (map (((rank c1),(rank c2),(rank c3),(rank c4)) == ) [(Ace, Two, Three, Four), (Ace, Two, Four, Three), (Ace, Three, Two, Four), (Ace, Three, Four, Two), (Ace, Four, Two, Three), (Ace, Four, Three, Two), (Two, Ace, Three, Four), (Two, Ace, Four, Three), (Two, Three, Ace, Four), (Two, Three, Four, Ace), (Two, Four, Ace, Three), (Two, Four, Three, Ace), (Three, Ace, Two, Four), (Three, Ace, Four, Two), (Three, Two, Ace, Four), (Three, Two, Four, Ace), (Three, Four, Ace, Two), (Three, Four, Two, Ace), (Four, Ace, Two, Three), (Four, Ace, Three, Two), (Four, Two, Ace, Three), (Four, Two, Three, Ace), (Four, Three, Ace, Two), (Four, Three, Two, Ace), (Two, Three, Four, Five), (Two, Three, Five, Four), (Two, Four, Three, Five), (Two, Four, Five, Three), (Two, Five, Three, Four), (Two, Five, Four, Three), (Three, Two, Four, Five), (Three, Two, Five, Four), (Three, Four, Two, Five), (Three, Four, Five, Two), (Three, Five, Two, Four), (Three, Five, Four, Two), (Four, Two, Three, Five), (Four, Two, Five, Three), (Four, Three, Two, Five), (Four, Three, Five, Two), (Four, Five, Two, Three), (Four, Five, Three, Two), (Five, Two, Three, Four), (Five, Two, Four, Three), (Five, Three, Two, Four), (Five, Three, Four, Two), (Five, Four, Two, Three), (Five, Four, Three, Two), (Three, Four, Five, Six), (Three, Four, Six, Five), (Three, Five, Four, Six), (Three, Five, Six, Four), (Three, Six, Four, Five), (Three, Six, Five, Four), (Four, Three, Five, Six), (Four, Three, Six, Five), (Four, Five, Three, Six), (Four, Five, Six, Three), (Four, Six, Three, Five), (Four, Six, Five, Three), (Five, Three, Four, Six), (Five, Three, Six, Four), (Five, Four, Three, Six), (Five, Four, Six, Three), (Five, Six, Three, Four), (Five, Six, Four, Three), (Six, Three, Four, Five), (Six, Three, Five, Four), (Six, Four, Three, Five), (Six, Four, Five, Three), (Six, Five, Three, Four), (Six, Five, Four, Three), (Four, Five, Six, Seven), (Four, Five, Seven, Six), (Four, Six, Five, Seven), (Four, Six, Seven, Five), (Four, Seven, Five, Six), (Four, Seven, Six, Five), (Five, Four, Six, Seven), (Five, Four, Seven, Six), (Five, Six, Four, Seven), (Five, Six, Seven, Four), (Five, Seven, Four, Six), (Five, Seven, Six, Four), (Six, Four, Five, Seven), (Six, Four, Seven, Five), (Six, Five, Four, Seven), (Six, Five, Seven, Four), (Six, Seven, Four, Five), (Six, Seven, Five, Four), (Seven, Four, Five, Six), (Seven, Four, Six, Five), (Seven, Five, Four, Six), (Seven, Five, Six, Four), (Seven, Six, Four, Five), (Seven, Six, Five, Four), (Five, Six, Seven, Eight), (Five, Six, Eight, Seven), (Five, Seven, Six, Eight), (Five, Seven, Eight, Six), (Five, Eight, Six, Seven), (Five, Eight, Seven, Six), (Six, Five, Seven, Eight), (Six, Five, Eight, Seven), (Six, Seven, Five, Eight), (Six, Seven, Eight, Five), (Six, Eight, Five, Seven), (Six, Eight, Seven, Five), (Seven, Five, Six, Eight), (Seven, Five, Eight, Six), (Seven, Six, Five, Eight), (Seven, Six, Eight, Five), (Seven, Eight, Five, Six), (Seven, Eight, Six, Five), (Eight, Five, Six, Seven), (Eight, Five, Seven, Six), (Eight, Six, Five, Seven), (Eight, Six, Seven, Five), (Eight, Seven, Five, Six), (Eight, Seven, Six, Five), (Six, Seven, Eight, Nine), (Six, Seven, Nine, Eight), (Six, Eight, Seven, Nine), (Six, Eight, Nine, Seven), (Six, Nine, Seven, Eight), (Six, Nine, Eight, Seven), (Seven, Six, Eight, Nine), (Seven, Six, Nine, Eight), (Seven, Eight, Six, Nine), (Seven, Eight, Nine, Six), (Seven, Nine, Six, Eight), (Seven, Nine, Eight, Six), (Eight, Six, Seven, Nine), (Eight, Six, Nine, Seven), (Eight, Seven, Six, Nine), (Eight, Seven, Nine, Six), (Eight, Nine, Six, Seven), (Eight, Nine, Seven, Six), (Nine, Six, Seven, Eight), (Nine, Six, Eight, Seven), (Nine, Seven, Six, Eight), (Nine, Seven, Eight, Six), (Nine, Eight, Six, Seven), (Nine, Eight, Seven, Six), (Seven, Eight, Nine, Ten), (Seven, Eight, Ten, Nine), (Seven, Nine, Eight, Ten), (Seven, Nine, Ten, Eight), (Seven, Ten, Eight, Nine), (Seven, Ten, Nine, Eight), (Eight, Seven, Nine, Ten), (Eight, Seven, Ten, Nine), (Eight, Nine, Seven, Ten), (Eight, Nine, Ten, Seven), (Eight, Ten, Seven, Nine), (Eight, Ten, Nine, Seven), (Nine, Seven, Eight, Ten), (Nine, Seven, Ten, Eight), (Nine, Eight, Seven, Ten), (Nine, Eight, Ten, Seven), (Nine, Ten, Seven, Eight), (Nine, Ten, Eight, Seven), (Ten, Seven, Eight, Nine), (Ten, Seven, Nine, Eight), (Ten, Eight, Seven, Nine), (Ten, Eight, Nine, Seven), (Ten, Nine, Seven, Eight), (Ten, Nine, Eight, Seven), (Eight, Nine, Ten, Jack), (Eight, Nine, Jack, Ten), (Eight, Ten, Nine, Jack), (Eight, Ten, Jack, Nine), (Eight, Jack, Nine, Ten), (Eight, Jack, Ten, Nine), (Nine, Eight, Ten, Jack), (Nine, Eight, Jack, Ten), (Nine, Ten, Eight, Jack), (Nine, Ten, Jack, Eight), (Nine, Jack, Eight, Ten), (Nine, Jack, Ten, Eight), (Ten, Eight, Nine, Jack), (Ten, Eight, Jack, Nine), (Ten, Nine, Eight, Jack), (Ten, Nine, Jack, Eight), (Ten, Jack, Eight, Nine), (Ten, Jack, Nine, Eight), (Jack, Eight, Nine, Ten), (Jack, Eight, Ten, Nine), (Jack, Nine, Eight, Ten), (Jack, Nine, Ten, Eight), (Jack, Ten, Eight, Nine), (Jack, Ten, Nine, Eight), (Nine, Ten, Jack, Queen), (Nine, Ten, Queen, Jack), (Nine, Jack, Ten, Queen), (Nine, Jack, Queen, Ten), (Nine, Queen, Ten, Jack), (Nine, Queen, Jack, Ten), (Ten, Nine, Jack, Queen), (Ten, Nine, Queen, Jack), (Ten, Jack, Nine, Queen), (Ten, Jack, Queen, Nine), (Ten, Queen, Nine, Jack), (Ten, Queen, Jack, Nine), (Jack, Nine, Ten, Queen), (Jack, Nine, Queen, Ten), (Jack, Ten, Nine, Queen), (Jack, Ten, Queen, Nine), (Jack, Queen, Nine, Ten), (Jack, Queen, Ten, Nine), (Queen, Nine, Ten, Jack), (Queen, Nine, Jack, Ten), (Queen, Ten, Nine, Jack), (Queen, Ten, Jack, Nine), (Queen, Jack, Nine, Ten), (Queen, Jack, Ten, Nine), (Ten, Jack, Queen, King), (Ten, Jack, King, Queen), (Ten, Queen, Jack, King), (Ten, Queen, King, Jack), (Ten, King, Jack, Queen), (Ten, King, Queen, Jack), (Jack, Ten, Queen, King), (Jack, Ten, King, Queen), (Jack, Queen, Ten, King), (Jack, Queen, King, Ten), (Jack, King, Ten, Queen), (Jack, King, Queen, Ten), (Queen, Ten, Jack, King), (Queen, Ten, King, Jack), (Queen, Jack, Ten, King), (Queen, Jack, King, Ten), (Queen, King, Ten, Jack), (Queen, King, Jack, Ten), (King, Ten, Jack, Queen), (King, Ten, Queen, Jack), (King, Jack, Ten, Queen), (King, Jack, Queen, Ten), (King, Queen, Ten, Jack), (King, Queen, Jack, Ten), (Jack, Queen, King, Ace), (Jack, Queen, Ace, King), (Jack, King, Queen, Ace), (Jack, King, Ace, Queen), (Jack, Ace, Queen, King), (Jack, Ace, King, Queen), (Queen, Jack, King, Ace), (Queen, Jack, Ace, King), (Queen, King, Jack, Ace), (Queen, King, Ace, Jack), (Queen, Ace, Jack, King), (Queen, Ace, King, Jack), (King, Jack, Queen, Ace), (King, Jack, Ace, Queen), (King, Queen, Jack, Ace), (King, Queen, Ace, Jack), (King, Ace, Jack, Queen), (King, Ace, Queen, Jack), (Ace, Jack, Queen, King), (Ace, Jack, King, Queen), (Ace, Queen, Jack, King), (Ace, Queen, King, Jack), (Ace, King, Jack, Queen), (Ace, King, Queen, Jack)]))
countStraightThree :: (Card,Card,Card,Card,Card)->Integer
countStraightThree (c1,c2,c3,c4,c5) = countList [(c1, c2, c3), (c1, c2, c4), (c1, c2, c5), (c1, c3, c4), (c1, c3, c5), (c1, c4, c5), (c2, c3, c4), (c2, c3, c5), (c2, c4, c5), (c3, c4, c5)] 0 where {countList [] a =0;countList (x:xs) a=if isStraightThree x then (countList xs a)+1 else countList xs a}
countStraightFour :: (Card,Card,Card,Card,Card)->Integer
countStraightFour (c1,c2,c3,c4,c5) = countList [(c1, c2, c3,c4), (c1, c2, c3,c5), (c1, c2, c4,c5), (c1, c3, c4,c5), (c2, c3,c4, c5)] 0 where {countList [] a =0;countList (x:xs) a=if isStraightFour x then (countList xs a)+1 else countList xs a}

--i dont know where some of these extra points are coming from
cribbageScoreTheShow :: Card -> Bool -> (Card,Card,Card,Card) -> Maybe Integer
cribbageScoreTheShow a b (c,d,e,f) =
  if (isFourOfAKind car)
    then Just (12+makes+turn+nobs)
    else (if isFullHouse car
      then Just (8+makes+turn+nobs)
      else if isThreeOfAKind car
        then Just (6+makes+turn+nobs)
        else if isTwoPair car
          then Just (4+makes+turn+nobs)
          else if isOnePair car
            then Just (2+makes+nobs+turn)
            else Just (makes+nobs+turn))
              where car=(combine a (c,d,e,f));
                    makes=make15 car*2;
                    turn=if isStraight car
                           then 5
                           else if (countStraightFour car)>0
                             then countStraightFour car*4
                             else countStraightThree car*3;
                             nobs=if (suit a)==(suit c)&&(rank c)==Jack
                               then 1
                               else if (suit a)==(suit d)&&(rank d)==Jack
                                 then 1
                                 else if (suit a)==(suit e)&&(rank e)==Jack
                                   then 1
                                   else if (suit a)==(suit f)&&(rank f)==Jack
                                     then 1
                                     else 0

{- ************************************************************ -}

-- after spending no less than 15 hours on this, I can safely say, i have no idea how to proceed
cribbageScoreThePlay :: [Either Card Card] -> Maybe [Either Integer Integer]
cribbageScoreThePlay [] = Nothing
cribbageScoreThePlay (c:cs) = case (c) of

  Left card -> Just ([Right 1])
  Right card -> Just ([Left 1])
